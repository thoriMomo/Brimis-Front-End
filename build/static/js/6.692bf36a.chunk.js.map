{"version":3,"sources":["views/Pages/Inputs/create_lead.js","views/Pages/Leads/leads_list.js","views/Pages/Leads/leads.js"],"names":["CreateLead","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleContact","selectedContact","setState","console","log","handleClient","selectedClient","toggle","bind","assertThisInitialized","handleClick","handleInputs","state","activeTab","dropdownOpen","Array","fill","clientList","value","label","contactList","fetchPost","_this2","fetchList","fetch","then","res","json","data","map","listItem","catch","err","listArr","listCon","i","length","client","contact","firstName","clientlist","concat","tab","newArray","element","index","key","e","target","clnt","axios","post","createdBy","clientContact","response","_this$state","react_default","a","createElement","reactstrap_es","sm","htmlFor","react_select_esm","onChange","options","type","id","placeholder","size","color","onClick","className","Component","LeadsList","list","getLeadDetails","_this3","view","item","tag","href","update","name","username","lastName","rel","List","connect","dispatch","getContactDetails","leadDetails","Leads","onUpdate","name_got","toggleModals","toggleCustom","handleChange","submitHandler","modal","custom","evt","preventDefault","handlerFromParent","x","tabs","classnames","active","tabId","action","method","row","leads_list","create_lead","xl","pill"],"mappings":"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","file":"static/js/6.692bf36a.chunk.js","sourcesContent":["import React, {\n    Component\n} from 'react';\nimport {\n    Col,\n    Row,\n    FormGroup,\n    Button,\n    Input,\n    Label,\n    Dropdown, DropdownItem, DropdownMenu, DropdownToggle,\n}\n    from 'reactstrap';\nimport axios from 'axios';\nimport Select from 'react-select';\n\nclass CreateLead extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleInputs = this.handleInputs.bind(this);\n        this.state = {\n            activeTab: '1',\n            dropdownOpen: new Array(6).fill(false),\n            clientList: [{\n                value: \"\",\n                label: \"\",\n            }],\n            contactList: [{\n                value: \"\",\n                label: \"\",\n            }],\n            selectedContact: \"\",\n            selectedClient: \"\",\n            // clientsArr: [],\n            // contactsArr: [],\n        };\n    }\n\n    componentDidMount() {\n        this.fetchPost();\n    }\n\n    fetchPost() {\n        let fetchList = [];\n        fetch('https://brimis-crm-backend.herokuapp.com/crm/clientcontacts/')\n            .then(res => {\n                console.log(\"fetched create lead clients\");\n                return res.json();\n            })\n            .then(data => {\n                // let fList = data.map((theList) => {return theList})\n                fetchList = data.map((listItem) => {\n                    return listItem\n                })\n            })\n            .catch(err => {\n                console.log(err);\n            })\n            .then(() => {\n                let listArr = [{ value: \"\", label: \"\" },];\n                let listCon = [{ value: \"\", label: \"\"},];\n\n                for (var i = 0; i < fetchList.length; i++) {\n                    listArr[i] = { value: fetchList[i].client[\"id\"], label: fetchList[i].client[\"name\"] };\n                    listCon[i] = { value: fetchList[i].contact[\"id\"], label: fetchList[i].contact.firstName,}\n                    console.log(listArr[i][\"value\"]);\n                }\n                this.setState({\n                    clientlist: [...listArr],\n                    contactList: [...listCon],\n\n                });\n            });\n    }\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab,\n            });\n        }\n    }\n\n    toggleDrop(tab) {\n        const newArray = this.state.dropdownOpen.map((element, index) => {\n            return (index === tab ? !element : false);\n        });\n        this.setState({\n            dropdownOpen: newArray,\n        });\n    }\n\n    handleContact = (selectedContact) => {\n        this.setState({ selectedContact });\n        console.log(`Category selected:`, selectedContact[\"value\"]);\n    }\n\n    handleClient = (selectedClient) => {\n        this.setState({ selectedClient });\n        console.log(`Client selected:`, selectedClient[\"value\"]);\n    }\n\n    handleInputs(key) {\n        return function (e) {\n            var state = {};\n            state[key] = e.target.value;\n            console.log(e.target.value);\n            this.setState(state);\n        }.bind(this);\n    }\n\n    handleClick() {\n        let clnt = \"\";\n        axios.post('https://brimis-crm-backend.herokuapp.com/crm/leads/create/', {\n            client: this.state.selectedClient[\"value\"],//this.state.selectedClient['value'],\n            createdBy: 1,\n            clientContact: this.state.selectedContact[\"value\"]\n            // feedback: \"\"\n        })\n        .then (function (){\n            clnt = this.state.selectedClient\n            console.log(clnt);\n        })\n        .then(function (response) {\n            console.log(response);\n        })\n        .catch(function (err) {\n            console.log(err.response);\n        });\n    }\n\n    render() {\n        const { selectedContact, selectedClient } = this.state;\n\n        return (\n            <Row>\n                <Col>\n                    <Row>\n                        <Col sm=\"4\">\n                            <Label htmlFor=\"clients\" > Client </Label>                                    \n                            <Select\n                                value={selectedClient}\n                                onChange={this.handleClient}\n                                options={this.state.clientlist}>\n                            </Select>\n                        </Col>\n                        <Col sm=\"4\">\n                            <Label htmlFor=\"contact\" > Contact Person </Label>\n                            <Select\n                                value={selectedContact}\n                                onChange={this.handleContact}\n                                options={this.state.contactList}\n                            />\n                        </Col>\n                    </Row>\n                <FormGroup >\n                    <Label htmlFor=\"country\" > Lead Notes </Label>\n                    <Input type=\"text\" id=\"country\" placeholder=\"Enter A Note\" onChange={this.handleInputs(\"feedback\")}/>\n                </FormGroup>\n                    <Button type=\"submit\" size=\"sm\" color=\"primary\" onClick={this.handleClick} > < i className=\"fa fa-user\" > </i>Submit</Button >\n                    <Button type=\"reset\" size=\"sm\" color=\"danger\"><i className=\"fa fa-ban\"></i> Reset</Button>\n            </Col>\n        </Row>\n        );\n    }\n}\n\nexport default CreateLead;","import React, {\n    Component\n} from 'react';\nimport { Col, ListGroup, ListGroupItem, Row, } from 'reactstrap';\n//import { connect } from 'net';\nimport { connect } from \"react-redux\";\nimport { getLeadDetails } from \"../../redux/actions/index\"\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getContactDetails: leadDetails => dispatch(getLeadDetails(leadDetails))\n    };\n};\n\nclass LeadsList extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            list: [],\n            clientContact: \"\",\n        }\n    }\n\nupdate(client, createdBy, clientContact) {\n        console.log(clientContact);\n        // const contactID = 1;\n        // this.props.getLeadDetails({client , createdBy, clientContact});\n        getLeadDetails({client , createdBy, clientContact});\n        this.setState({clientContact: clientContact});\n    }\n\n    componentDidMount() {\n        this.fetchPost();\n    }\n\n    fetchPost() {\n        let fetchList = [];\n        fetch('https://brimis-crm-backend.herokuapp.com/crm/leads/')\n        .then(res => {\n            return res.json();\n        })\n        .then(data => {\n            fetchList = data.map((listItem) => {\n                return listItem;\n            })\n        })\n        .then(() => {\n            this.setState({\n                list: fetchList,\n            });\n        })\n        .catch(err => {\n            console.log(err);\n        });\n    }\n\n    render() {\n        const view = this.state.list.map((item, index) =>\n            <ListGroupItem key={index} tag=\"a\" href=\"#/leads/details\" onClick={() => this.update(item.client.name, item.createdBy.username, item.clientContact.firstName)}> {item.client.name} | {item.clientContact.firstName} {item.clientContact.lastName}\n            {console.log(\"printing out list in render:\" + this.state.list)}\n                <div className=\"card-header-actions\">\n                    <a href=\"#\" rel=\"noreferrer noopener\" className=\"card-header-action\">\n                        <small className=\"text-muted\">delete</small>\n                    </a>\n                </div>\n                <div className=\"card-header-actions\">\n                    <a href=\"#\" rel=\"noreferrer noopener\" className=\"card-header-action\">\n                        <small className=\"text-muted\">edit</small>\n                    </a>\n                </div>\n            </ListGroupItem>\n        )\n        return (\n            <Row>\n                <Col>\n                    <ListGroup>\n                        {view}\n                    </ListGroup>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nconst List = connect(null, mapDispatchToProps)(LeadsList)\n\nexport default List;","import React, {\n  Component\n}\n  from 'react';\nimport {\n  Col,\n  Row, Card, CardBody, CardHeader, ListGroup, ListGroupItem, Badge,\n  Form,\n  FormGroup,\n  Button,\n  Input, Collapse,\n  Label,\n  Nav,\n  NavItem,\n  NavLink,\n  TabContent,\n  TabPane,\n}\n  from 'reactstrap';\nimport classnames from 'classnames';\n\nimport CreateLead from '../Inputs/create_lead'\nimport LeadsList from './leads_list';\n\nclass Leads extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.toggleModals = this.toggleModals.bind(this);\n    this.toggleCustom = this.toggleCustom.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.submitHandler = this.submitHandler.bind(this);\n\n    this.state = {\n      activeTab: '1',\n      dropdownOpen: new Array(6).fill(false),\n      modal: false,\n      custom: [false, false],\n      name_got: \"\",\n    };\n  }\n\n  submitHandler(evt){\n    evt.preventDefault();\n\n    this.props.handlerFromParent(this.state.name_got);\n\n    this.setState({\n        name_got: ''\n    });\n}\n\n  handleChange() {\n    this.setState({\n        name_got: \"Eureka!\"\n    })\n}\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab,\n      });\n    }\n  }\n\n  onUpdate = (name) => {\n    //this.name_got= name,\n    fetch('https://brimis-crm-backend.herokuapp.com/crm/leads/?' + name)\n    console.log(\"lead: \" + this.name_got);\n}\n\n  toggleDrop(tab) {\n    const newArray = this.state.dropdownOpen.map((element, index) => {\n      return (index === tab ? !element : false);\n    });\n    this.setState({\n      dropdownOpen: newArray,\n    });\n  }\n\n  toggleCustom(tab) {\n\n    const prevState = this.state.custom;\n    const state = prevState.map((x, index) => tab === index ? !x : false);\n\n    this.setState({\n      custom: state,\n    });\n  }\n\n  toggleModals() {\n    this.setState({\n        modal: !this.state.modal,\n      });\n  }\n\n  render() {\n\n    return (\n      <div>\n        <Row>\n          <Col sm = \"9\">\n            <Nav tabs>\n              <NavItem>\n                <NavLink className={\n                  classnames({\n                    active: this.state.activeTab === '1'\n                  })\n                }\n                  onClick={\n                    () => {\n                      this.toggle('1');\n                    }\n                  } >\n                  Current Leads\n                            </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink className={\n                  classnames({\n                    active: this.state.activeTab === '2'\n                  })\n                }\n                  onClick={\n                    () => {\n                      this.toggle('2');\n                    }\n                  } >\n                  Create Lead\n                            </NavLink>\n              </NavItem>\n            </Nav>\n            <TabContent activeTab={\n              this.state.activeTab\n            } >\n              <TabPane tabId=\"1\" >\n                <Form action=\"\" method=\"get\" className=\"form-horizontal\">\n                  <FormGroup row>\n                  <Col sm=\"12\">\n                    {/* <Label for=\"leadSearch\">Search for Lead</Label> */}\n                    <Input type=\"search\" name=\"search\" id=\"leadSearch\" placeholder=\"Search Leads\" />\n                    </Col>\n                    {/* <Col sm=\"7\">\n                      <Input type=\"text\" placeholder=\"Search\" />\n                    </Col>\n                    <Button type=\"submit\" size=\"sm\" color=\"primary\" > < i className=\"fa fa-user\" > </i>Search</Button> */}\n                  </FormGroup>\n                </Form>\n                <LeadsList onUpdate={this.onUpdate}/>\n              </TabPane>\n              <TabPane tabId=\"2\" >\n                <CreateLead />\n              </TabPane>\n            </TabContent>\n          </Col>\n          <Col sm=\"3\" xl=\"3\">\n            <Card>\n              <CardHeader>\n                <strong>Lead Statuses</strong>\n              </CardHeader>\n              <CardBody>\n                <ListGroup>\n                  <ListGroupItem className=\"justify-content-between\">New <Badge className=\"float-right\" pill color=\"warning\">1</Badge></ListGroupItem>\n                  <ListGroupItem className=\"justify-content-between\">Contacted <Badge className=\"float-right\" pill color=\"warning\">0</Badge></ListGroupItem>\n                  <ListGroupItem className=\"justify-content-between\">Converted <Badge className=\"float-right\" pill color=\"warning\">0</Badge></ListGroupItem>\n                  <ListGroupItem className=\"justify-content-between\">Rejected <Badge className=\"float-right\" pill color=\"warning\">0</Badge></ListGroupItem>\n                  <ListGroupItem className=\"justify-content-between\">Other <Badge className=\"float-right\" pill color=\"warning\">0</Badge></ListGroupItem>\n                  <ListGroupItem className=\"justify-content-between\">Total Leads <Badge className=\"float-right\" pill >1</Badge></ListGroupItem>\n                </ListGroup>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Leads;"],"sourceRoot":""}