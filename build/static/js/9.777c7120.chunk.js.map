{"version":3,"sources":["views/Pages/Inputs/task_input.js","views/Pages/Tasks/task_list.js","views/Pages/Tasks/tasks.js"],"names":["options","value","label","TaskInput","props","_this","Object","_goinfre_vsibanyo_brimis_crm_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_goinfre_vsibanyo_brimis_crm_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_goinfre_vsibanyo_brimis_crm_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","handleCategory","selectedCategory","setState","console","log","handleClient","selectedClient","toggle","bind","_goinfre_vsibanyo_brimis_crm_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","handleClick","handleInputs","handleChange","state","activeTab","dropdownOpen","Array","fill","list","task","client","dateDue","time","isCompleted","startDate","Date","date","tab","newArray","map","element","index","fetchPost","_this2","fetchList","fetch","then","res","json","data","listItem","catch","err","listArr","i","length","id","name","concat","key","e","target","axios","post","assignedTo","response","error","_this$state","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_7__","sm","htmlFor","type","placeholder","onChange","react_select__WEBPACK_IMPORTED_MODULE_9__","for","size","color","onClick","className","Component","TaskList","classCallCheck","possibleConstructorReturn","getPrototypeOf","view","item","react_default","reactstrap_es","taskType","href","rel","Tasks","assertThisInitialized","tabs","classnames","active","tabId","row","task_list","task_input","xl","pill"],"mappings":"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","file":"static/js/9.777c7120.chunk.js","sourcesContent":["import React, {\n    Component\n}\n    from 'react';\nimport {\n    Col,\n    Row,\n    FormGroup,\n    Button,\n    Input,\n    Label,\n    Dropdown, DropdownItem, DropdownMenu, DropdownToggle, \n}\n    from 'reactstrap';\n\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Select from 'react-select';\n\nconst options = [\n    { value: 'call', label: 'Call' },\n    { value: 'email', label: 'Email' },\n    { value: 'follow-up', label: 'Follow Up' }\n];\n\nclass TaskInput extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleInputs = this.handleInputs.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.state = {\n            activeTab: '1',\n            dropdownOpen: new Array(6).fill(false),\n            list: [{\n                value: \"\",\n                label: \"\",\n            }],\n            task: '',\n            client: '',\n            dateDue: '',\n            time: '',\n            isCompleted: '',\n            selectedCategory: null,\n            selectedClient: null,\n            startDate: new Date(),\n        };\n    }\n\n    handleChange(date) {\n        this.setState({\n          startDate: date\n        });\n      }\n      \n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab,\n            });\n        }\n    }\n\n    toggleDrop(tab) {\n        const newArray = this.state.dropdownOpen.map((element, index) => {\n            return (index === tab ? !element : false);\n        });\n        this.setState({\n            dropdownOpen: newArray,\n        });\n    }\n\n    handleCategory = (selectedCategory) => {\n        this.setState({ selectedCategory });\n        console.log(`Category selected:`, selectedCategory);\n    }\n\n    handleClient = (selectedClient) => {\n        this.setState({ selectedClient });\n        console.log(`Client selected:`, selectedClient);\n    }\n\n    componentDidMount() {\n        this.fetchPost();\n    }\n\n    fetchPost() {\n        let fetchList = [];\n        fetch('https://brimis-crm-backend.herokuapp.com/crm/clients/')\n            .then(res => {\n                console.log(\"fetched create task clients\");\n                return res.json();\n            })\n            .then(data => {\n                fetchList = data.map((listItem) => {\n                    return listItem\n                })\n            })\n            .catch(err => {\n                console.log(err);\n            })\n            .then(() => {\n                let listArr = [{value: \"\", label: \"\"},];\n                \n                for (var i = 0; i < fetchList.length; i++)\n                {\n                    listArr[i] = { value: fetchList[i].id, label: fetchList[i].name };\n                    console.log(listArr[i].value, listArr[i].label)\n                }\n                this.setState({\n                    list: [...listArr]\n                });\n                \n            });\n            \n    }\n\n    handleInputs(key) {\n        return function (e) {\n            var state = {};\n            state[key] = e.target.value;\n            console.log(e.target.value);\n            this.setState(state);\n        }.bind(this);\n    }\n\n    handleClick() {\n        \n        axios.post('https://brimis-crm-backend.herokuapp.com/crm/usertasks/create/', {\n            assignedTo: \"1\",\n            task: this.state.task,\n            client: this.state.client,\n            dateDue: this.state.dateDue,\n            time: this.state.time,\n            isCompleted: 'False'\n        })\n            .then(function (response) {\n                console.log(response);\n                console.log(\"Pushed new task\");\n            })\n            .catch(function (error) {\n                console.log(error);\n        });\n    }\n\n    render() {\n        const { selectedCategory, selectedClient } = this.state;\n        return (\n            <div>\n                <Row>\n                    <Col>\n                        <Row>\n                            <Col sm=\"8\">\n                                <FormGroup >\n                                    <Label htmlFor=\"task\" > New Task </Label>\n                                    <Input type=\"text\" id=\"task\" placeholder=\"Enter task details\" onChange={this.handleInputs(\"task\")} />\n                                </FormGroup>\n                            </Col>\n                            <Col sm=\"4\">\n                                <Label htmlFor=\"client\" > Client </Label>\n                                <Select\n                                    value={selectedClient}\n                                    onChange={this.handleClient}\n                                    options={this.state.list}\n                                />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm=\"4\">\n                                <Label for=\"timeDue\">Time Due</Label>\n                                <Input type=\"time\" name=\"time\" id=\"timeDue\" placeholder=\"Time Due\" />\n                            </Col>\n                            <Col sm=\"4\">\n                                <Label for=\"date\">Date</Label>\n                                <Input type=\"date\" name=\"date\" id=\"dueDate\" placeholder=\"Due Date\" />\n                            </Col>\n                            <Col sm=\"4\">\n                                <Label htmlFor=\"category\" > Category: </Label>\n                                <Select\n                                    value={selectedCategory}\n                                    onChange={this.handleCategory}\n                                    options={options}\n                                />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Button type=\"submit\" size=\"sm\" color=\"primary\" onClick={this.handleClick}> < i className=\"fa fa-user\" > </i>Create</Button >\n                                <Button type=\"reset\" size=\"sm\" color=\"danger\"><i className=\"fa fa-ban\"></i> Reset</Button>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default TaskInput;","import React, {\n    Component\n} from 'react';\nimport { Col, ListGroup, ListGroupItem, Row, } from 'reactstrap';\n\n\nclass TaskList extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            list: [],\n        }\n    }\n\n    componentDidMount() {\n        this.fetchPost();\n    }\n\n    fetchPost() {\n\n        fetch('https://brimis-crm-backend.herokuapp.com/crm/tasks/')\n            .then(res => {\n                return res.json();\n            })\n            .then(data => {\n                this.setState({\n                    list: data\n                });\n            })\n            .catch(err => {\n                console.log(err);\n            });\n        console.log(\"Fetched Task list\");\n    }\n    \n    render() {\n        const view = this.state.list.map((item, index) =>\n            <ListGroupItem key={index}>{item.taskType}\n                <div className=\"card-header-actions\">\n                    <a href=\"#\" rel=\"noreferrer noopener\" className=\"card-header-action\">\n                        <small className=\"text-muted\">delete</small>\n                    </a>\n                </div>\n                <div className=\"card-header-actions\">\n                    <a href=\"#\" rel=\"noreferrer noopener\" className=\"card-header-action\">\n                        <small className=\"text-muted\">edit</small>\n                    </a>\n                </div>\n            </ListGroupItem>\n        )\n        return (\n            <Row>\n                <Col>\n                    <ListGroup>\n                        {view}\n                    </ListGroup>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default TaskList;","import React, {\n  Component\n}\nfrom 'react';\nimport {\n  Col,\n  Nav,\n  NavItem,\n  NavLink,\n  Row,\n  TabContent,\n  TabPane,\n  Form,\n  FormGroup,\n  Button,\n  Input,\n  Label,\n  Dropdown, DropdownItem, DropdownMenu, DropdownToggle, Card, CardBody, CardHeader, ListGroup, ListGroupItem, Badge,\n}\nfrom 'reactstrap';\nimport classnames from 'classnames';\nimport TaskInput from '../Inputs/task_input'\nimport TaskList from './task_list';\n\nclass Tasks extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            activeTab: '1',\n            dropdownOpen: new Array(6).fill(false),\n        };\n    }\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab,\n            });\n        }\n    }\n\n    toggleDrop(tab) {\n        const newArray = this.state.dropdownOpen.map((element, index) => {\n          return (index === tab ? !element : false);\n        });\n        this.setState({\n          dropdownOpen: newArray,\n        });\n    }\n\n  render() {\n\n    return ( \n        <div>\n            <Row>\n              <Col sm=\"9\">\n                    <Nav tabs>\n                        <NavItem>\n                            <NavLink className = {\n                                classnames({\n                                    active: this.state.activeTab === '1'\n                                })\n                            }\n                            onClick = {\n                                () => {\n                                    this.toggle('1');\n                                }\n                            } >\n                                Current Tasks \n                            </NavLink> \n                        </NavItem>\n                        <NavItem>\n                            <NavLink className = {\n                                classnames({\n                                    active: this.state.activeTab === '2'\n                                })\n                            }\n                            onClick = {\n                                () => {\n                                    this.toggle('2');\n                                }\n                            } >\n                                Overdue Tasks\n                            </NavLink>\n                        </NavItem> \n                        <NavItem>\n                            <NavLink className={\n                                classnames({\n                                    active: this.state.activeTab === '3'\n                                })\n                            }\n                                onClick={\n                                    () => {\n                                        this.toggle('3');\n                                    }\n                                } >\n                                Create Task\n                            </NavLink>\n                        </NavItem> \n                    </Nav>\n                    <TabContent activeTab = {\n                        this.state.activeTab\n                    } >\n                        <TabPane tabId=\"1\" >\n                            <Form >\n                                <FormGroup row>\n                                    <Col sm=\"12\">\n                                        {/* <Label for=\"taskSearch\">Search</Label> */}\n                                        <Input type=\"search\" name=\"search\" id=\"taskSearch\" placeholder=\"Search current tasks\" />\n                                    </Col>\n                                    {/* <Button type=\"submit\" size=\"sm\" color=\"primary\" > < i className=\"fa fa-user\" > </i>Search</Button> */}\n                                </FormGroup>\n                            </Form>\n                            <TaskList />\n                        </TabPane>\n                        <TabPane tabId=\"2\" >\n                            <Form >\n                                <FormGroup row>\n                                    <Col sm=\"12\">\n                                        <Input type=\"search\" name=\"search\" id=\"taskSearch\" placeholder=\"Search overdue tasks\" />\n                                        {/* <Input type=\"text\" placeholder=\"Search\" /> */}\n                                    </Col>\n                                    {/* <Button type=\"submit\" size=\"sm\" color=\"primary\" > < i className=\"fa fa-user\" > </i>Search</Button> */}\n                                </FormGroup>\n                            </Form>\n                            <TaskList />\n                        </TabPane>\n                        <TabPane tabId=\"3\" >\n                            <TaskInput />\n                        </TabPane>\n                    </TabContent>\n                </Col>\n                <Col sm=\"3\" xl=\"3\">\n                  <Card>\n                    <CardHeader>\n                      <strong>Task Statuses</strong>\n                    </CardHeader>\n                    <CardBody>\n                      <ListGroup>\n                        <ListGroupItem className=\"justify-content-between\">Overdue<Badge className=\"float-right\" pill color=\"warning\">1</Badge></ListGroupItem>\n                        <ListGroupItem className=\"justify-content-between\">As Soon As Possible <Badge className=\"float-right\" pill color=\"warning\">0</Badge></ListGroupItem>\n                        <ListGroupItem className=\"justify-content-between\">Today <Badge className=\"float-right\" pill color=\"warning\">0</Badge></ListGroupItem>\n                        <ListGroupItem className=\"justify-content-between\">Tomorrow<Badge className=\"float-right\" pill color=\"warning\">0</Badge></ListGroupItem>\n                        <ListGroupItem className=\"justify-content-between\">This Week <Badge className=\"float-right\" pill color=\"warning\">0</Badge></ListGroupItem>\n                        <ListGroupItem className=\"justify-content-between\">Next Week<Badge className=\"float-right\" pill color=\"warning\">0</Badge></ListGroupItem>\n                        <ListGroupItem className=\"justify-content-between\">Sometime Later <Badge className=\"float-right\" pill color=\"warning\">0</Badge></ListGroupItem>\n                        <ListGroupItem className=\"justify-content-between\">Total Pending Tasks <Badge className=\"float-right\" pill >1</Badge></ListGroupItem>\n                      </ListGroup>\n                    </CardBody>\n                  </Card>\n                </Col>\n            </Row>\n        </div>\n    );\n  }\n}\n\nexport default Tasks;"],"sourceRoot":""}