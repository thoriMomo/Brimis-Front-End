{"version":3,"sources":["views/Pages/Inputs/general-quo.js","views/Pages/Inputs/tender_quo.js","views/Pages/Inputs/create_quote.js","views/Pages/Quotations/rfq_list.js","views/Pages/Quotations/tender_list.js","views/Pages/Quotations/quotes.js"],"names":["GeneralQuo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handlePerson","selectedPerson","setState","console","log","handleClient","selectedClient","handleType","selectedType","handleChoice","selectedChoice","toggle","bind","assertThisInitialized","postInfo","handleInputs","state","activeTab","dropdownOpen","Array","fill","clientList","value","label","contactList","client","createdBy","rfq","quoteType","description","dateReceived","deadline","time","isSubmitted","comments","fetchPost","_this2","fetchList","fetch","then","res","json","data","map","listItem","catch","err","listArr","listCon","i","length","contact","firstName","clientlist","concat","key","e","target","axios","post","response","error","tab","newArray","element","index","_this3","_this$state","react_default","a","createElement","reactstrap_es","sm","htmlFor","react_select_esm","onChange","options","type","id","placeholder","for","name","size","color","onClick","className","Component","TenderQuo","handleChange","selectedOption","tenderID","ResponsiblePerson","enquiryDate","clarificationDate","buyerEnduser","trn","tenderValue","status","isDelivered","probability","technicalFunctionality","expectedOrderPlacement","CreateQuo","onEntering","onEntered","onExiting","onExited","toggleAccordion","toggleCustom","toggleFade","collapse","accordion","custom","fadeIn","timeout","x","block","aria-expanded","aria-controls","isOpen","data-parent","aria-labelledby","general_quo","tender_quo","RfqList","list","view","item","tag","href","rel","TenderList","Quotes","tabs","classnames","active","tabId","action","method","row","rfq_list","tender_list","create_quote"],"mappings":"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","file":"static/js/16.600faf94.chunk.js","sourcesContent":["import React, {\n    Component\n} from 'react';\nimport {\n    Col,\n    Row,\n    FormGroup,\n    Button,\n    Input,\n    Label, Dropdown, DropdownItem, DropdownMenu, DropdownToggle,\n}\n    from 'reactstrap';\nimport axios from \"axios\";\nimport Select from 'react-select';\n\nclass GeneralQuo extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.postInfo = this.postInfo.bind(this);\n        this.handleInputs = this.handleInputs.bind(this);\n        this.state = {\n            activeTab: '1',\n            dropdownOpen: new Array(6).fill(false),\n            clientList: [{\n                value: \"\",\n                label: \"\",\n            }],\n            contactList: [{\n                value: \"\",\n                label: \"\",\n            }],\n            selectedClient: null,\n            selectedPerson: null,\n            selectedType: null,\n            selectedChoice: null,\n            client: \"\",\n            createdBy: \"\",\n            rfq: \"\",\n            quoteType: \"\",\n            description: \"\",\n            dateReceived: \"\",\n            deadline: \"\",\n            time: \"\",\n            isSubmitted: \"\",\n            comments: \"\",\n        };\n    }\n\n    componentDidMount() {\n        this.fetchPost();\n    }\n\n    fetchPost() {\n        let fetchList = [];\n        fetch('https://brimis-crm-backend.herokuapp.com/crm/clientcontacts/')\n            .then(res => {\n                console.log(\"fetched create task clients\");\n                return res.json();\n            })\n            .then(data => {\n                fetchList = data.map((listItem) => {\n                    return listItem\n                })\n            })\n            .catch(err => {\n                console.log(err);\n            })\n            .then(() => {\n                let listArr = [{ value: \"\", label: \"\" },];\n                let listCon = [{ value: \"\", label: \"\" },];\n\n                for (var i = 0; i < fetchList.length; i++) {\n                    listArr[i] = { value: fetchList[i].client[\"name\"], label: fetchList[i].client[\"name\"] };\n                    listCon[i] = { value: fetchList[i].contact.firstName, label: fetchList[i].contact.firstName, }\n                    console.log(listArr[i][\"value\"]);\n                }\n                this.setState({\n                    clientlist: [...listArr],\n                    contactList: [...listCon],\n\n                });\n            });\n    }\n\n    handlePerson = (selectedPerson) => {\n        this.setState({ selectedPerson });\n        console.log(`Option selected:`, selectedPerson);\n    }\n\n    handleClient = (selectedClient) => {\n        this.setState({ selectedClient });\n        console.log(`Option selected:`, selectedClient);\n    }\n\n    handleType = (selectedType) => {\n        this.setState({ selectedType });\n        console.log(`Option selected:`, selectedType);\n    }\n\n    handleChoice = (selectedChoice) => {\n        this.setState({ selectedChoice });\n        console.log(`Option selected:`, selectedChoice);\n    }\n\n    handleInputs(key) {\n        return function (e) {\n            var state = {};\n            state[key] = e.target.value;\n            this.setState(state);\n        }.bind(this);\n    }\n    \n    postInfo() {\n        axios.post('https://brimis-crm-backend.herokuapp.com/crm/quotes/create/', {\n            client: \"\",\n            createdBy: \"\",\n            rfq: \"\",\n            quoteType: \"\",\n            description: \"\",\n            dateReceived: \"\",\n            deadline: \"\",\n            time: \"\",\n            isSubmitted: \"\",\n            comments: \"\",\n        })\n        .then(function (response) {\n            console.log(response);\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab,\n            });\n        }\n    }\n\n    toggleDrop(tab) {\n        const newArray = this.state.dropdownOpen.map((element, index) => {\n            return (index === tab ? !element : false);\n        });\n        this.setState({\n            dropdownOpen: newArray,\n        });\n    }\n    render() {\n        const { selectedPerson, selectedClient, selectedType, selectedChoice } = this.state;\n        return (\n            <Row>\n                <Col>\n                    <Row>\n                        <Col sm=\"3\">\n                            <Label htmlFor=\"street\" > Client </Label>\n                            <Select\n                                value={selectedClient}\n                                onChange={this.handleClient}\n                                options={this.state.clientlist}\n                            />\n                        </Col>\n                        <Col sm=\"3\">\n                            <Label htmlFor=\"street\" > Contact Person </Label>\n                                <Select\n                                    value={selectedPerson}\n                                    onChange={this.handlePerson}\n                                    options={this.state.contactList}\n                                />\n                            </Col>\n                        <Col sm=\"3\">\n                            <Label htmlFor=\"street\" > Quote Type </Label>\n                            <Select\n                                value={selectedType}\n                                onChange={this.handleType}\n                                options={[\n                                    { value: 'product', label: 'Product' },\n                                    { value: 'service', label: 'Service' },\n                                    { value: 'other', label: 'Other' },\n                                ]}\n                            />\n                        </Col>\n                    </Row>\n                    <FormGroup >\n                        <Label htmlFor=\"country\" > Description </Label>\n                        <Input type=\"text\" id=\"country\" placeholder=\"Enter Description\" onChange={this.handleInputs(\"description\")}/>\n                    </FormGroup>\n                    <Row>\n                        <Col sm=\"3\">\n                            <FormGroup>\n                                <Label for=\"deadline\"> DeadLine </Label>\n                                <Input type=\"date\" name=\"deadline\" id=\"deadLine\" placeholder=\"DD/MM/YY\" onChange={this.handleInputs(\"deadline\")}/>\n                            </FormGroup>\n                        </Col>\n                        <Col sm=\"3\">\n                            <FormGroup>\n                                <Label for=\"time\">Time </Label>\n                                <Input type=\"time\" name=\"time\" id=\"time\" placeholder=\"00h00\" onChange={this.handleInputs(\"time\")}/>\n                            </FormGroup>\n                        </Col>\n                        <Col sm=\"3\">\n                            <Label htmlFor=\"street\" > Submitted </Label>\n                            <Select\n                                value={selectedChoice}\n                                onChange={this.handleChoice}\n                                options={[\n                                    { value: 'yes', label: 'Yes' },\n                                    { value: 'no', label: 'No' },\n                                ]}\n                            />\n                        </Col>\n                    </Row>\n                    <FormGroup >\n                        <Label htmlFor=\"country\" > Comments </Label>\n                        <Input type=\"text\" id=\"country\" placeholder=\"Enter Comment\" onChange={this.handleInputs(\"comments\")}/>\n                    </FormGroup>\n                    <Button type=\"submit\" size=\"sm\" color=\"primary\" onClick={() => this.postInfo}  > < i className=\"fa fa-user\" > </i>Submit</Button >\n                    <Button type=\"reset\" size=\"sm\" color=\"danger\"><i className=\"fa fa-ban\"></i> Reset</Button>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default GeneralQuo;","import React, {\n    Component\n} from 'react';\nimport {\n    Col,\n    Row,\n    FormGroup,\n    Button,\n    Input,\n    Label,\n    Dropdown, DropdownItem, DropdownMenu, DropdownToggle,\n}\n    from 'reactstrap';\nimport axios from \"axios\";\nimport Select from 'react-select';\n\nconst options = [\n    { value: 'true', label: 'Yes' },\n    { value: 'false', label: 'No' },\n];\n\nclass TenderQuo extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.postInfo = this.postInfo.bind(this);\n        this.handleInputs = this.handleInputs.bind(this);\n        \n        this.state = {\n            activeTab: '1',\n            dropdownOpen: new Array(6).fill(false),\n            selectedClient: null,\n            clientList: [{\n                value: \"\",\n                label: \"\",\n            }],\n            client: \"\",\n            tenderID: \"\",\n            description: \"\",\n            ResponsiblePerson: \"\",\n            deadline: \"\",\n            time: \"\",\n            enquiryDate: \"\",\n            clarificationDate: \"\",\n            buyerEnduser: \"\",\n            trn: \"\",\n            tenderValue: \"\",\n            status: \"\",\n            isDelivered: \"\",\n            probability: \"\",\n            technicalFunctionality: \"\",\n            expectedOrderPlacement: \"\",\n            comments: \"\",\n        };\n    }\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab,\n            });\n        }\n    }\n\n    toggleDrop(tab) {\n        const newArray = this.state.dropdownOpen.map((element, index) => {\n            return (index === tab ? !element : false);\n        });\n        this.setState({\n            dropdownOpen: newArray,\n        });\n    }\n\n    componentDidMount() {\n        this.fetchPost();\n    }\n\n    fetchPost() {\n        let fetchList = [];\n        fetch('https://brimis-crm-backend.herokuapp.com/crm/clients/')\n            .then(res => {\n                console.log(\"fetched create task clients\");\n                return res.json();\n            })\n            .then(data => {\n                fetchList = data.map((listItem) => {\n                    return listItem\n                })\n            })\n            .catch(err => {\n                console.log(err);\n            })\n            .then(() => {\n                let listArr = [{ value: \"\", label: \"\" },];\n\n                for (var i = 0; i < fetchList.length; i++) {\n                    listArr[i] = { value: fetchList[i].id, label: fetchList[i].name };\n                    console.log(listArr[i].value, listArr[i].label)\n                }\n                this.setState({\n                    clientList: [...listArr]\n                });\n\n            });\n\n    }\n\n    handleClient = (selectedClient) => {\n        this.setState({ selectedClient });\n        console.log(`Client selected:`, selectedClient);\n    }\n\n    handleChange = (selectedOption) => {\n        this.setState({ selectedOption });\n        console.log(`Option selected:`, selectedOption);\n    }\n\n    handleInputs(key) {\n        return function (e) {\n            var state = {};\n            state[key] = e.target.value;\n            this.setState(state);\n        }.bind(this);\n    }\n\n    postInfo() {\n        axios.post('https://brimis-crm-backend.herokuapp.com/crm/tenders/create/', {\n            client: \"\",\n            tenderID: \"\",\n            description: \"\",\n            ResponsiblePerson: \"\",\n            deadline: \"\",\n            time: \"\",\n            enquiryDate: \"\",\n            clarificationDate: \"\",\n            buyerEnduser: \"\",\n            trn: \"\",\n            tenderValue: \"\",\n            status: \"\",\n            isDelivered: \"\",\n            probability: \"\",\n            technicalFunctionality: \"\",\n            expectedOrderPlacement: \"\",\n            comments: \"\",\n        })\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    render() {\n        const { selectedOption, selectedClient } = this.state;\n        return (\n            <Row>\n                <Col>\n                    <Row>\n                        <Col sm=\"3\">\n                            <Label htmlFor=\"client\" > Client </Label>\n                            <Select\n                                value={selectedClient}\n                                onChange={this.handleClient}\n                                options={this.state.clientList}\n                            />\n                        </Col>\n                        <Col sm=\"9\">\n                            <Label htmlFor=\"client_entry\" > Enter New Client </Label>\n                            <Input type=\"text\" id=\"client\" placeholder=\"Enter client\" onChange={this.handleInputs(\"client\")} />\n                        </Col>\n                    </Row>\n                    <FormGroup >\n                        <Label htmlFor=\"description\" > Description </Label>\n                        <Input type=\"text\" id=\"description\" placeholder=\"Enter Description\" onChange={this.handleInputs(\"description\")} />\n                    </FormGroup>\n                    <Row>\n                        <Col sm=\"3\">\n                            <FormGroup>\n                                <Label htmlFor=\"resp_person\" >Responsible Person </Label>\n                                <Input type=\"text\" id=\"resp_person\" placeholder=\"Who is responsible?\" onChange={this.handleInputs(\"ResponsiblePerson\")} />\n                            </FormGroup>\n                        </Col>\n                        <Col sm=\"3\">\n                            <FormGroup>\n                                <Label htmlFor=\"deadline\" > Deadline </Label>\n                                <Input type=\"date\" id=\"deadline\" placeholder=\"DD/MM/YYYY\" onChange={this.handleInputs(\"deadline\")} />\n                            </FormGroup>\n                        </Col>\n                        <Col sm=\"3\">\n                            <FormGroup>\n                                <Label htmlFor=\"time\" > Time </Label>\n                                <Input type=\"time\" id=\"time\" placeholder=\"00h00\" onChange={this.handleInputs(\"time\")} />\n                            </FormGroup>\n                        </Col>\n                        <Col sm=\"3\">\n                            <FormGroup>\n                                <Label htmlFor=\"enq_date\" > Enquiry Date </Label>\n                                <Input type=\"date\" id=\"enq_date\" placeholder=\"DD/MM/YYYY\" onChange={this.handleInputs(\"enquiryDate\")} />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"3\">\n                            <FormGroup>\n                                <Label htmlFor=\"clarification\" >Clarification Date </Label>\n                                <Input type=\"date\" id=\"clarification\" placeholder=\"DD/MM/YYYY\" onChange={this.handleInputs(\"clarificationDate\")} />\n                            </FormGroup>\n                        </Col>\n                        <Col sm=\"3\">\n                            <FormGroup>\n                                <Label htmlFor=\"trn\" > Tender Ref. Number </Label>\n                                <Input type=\"text\" id=\"trn\" placeholder=\"RFQ\" onChange={this.handleInputs(\"trn\")} />\n                            </FormGroup>\n                        </Col>\n                        <Col sm=\"3\">\n                            <FormGroup>\n                                <Label htmlFor=\"trn_val\" > Estimated Tender Value </Label>\n                                <Input type=\"text\" id=\"trn_val\" placeholder=\"R0.00\" onChange={this.handleInputs(\"tenderValue\")} />\n                            </FormGroup>\n                        </Col>\n                        <Col sm=\"3\">\n                            <FormGroup>\n                                <Label htmlFor=\"status\" > Status </Label>\n                                <Input type=\"text\" id=\"status\" placeholder=\"Status\" onChange={this.handleInputs(\"status\")} />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"3\">\n                            <Label htmlFor=\"submitted\" >Submitted </Label>\n                            <Select\n                                value={selectedOption}\n                                onChange={this.handleChange}\n                                options={options}\n                            />\n                        </Col>\n                        <Col sm=\"3\">\n                            <FormGroup>\n                                <Label htmlFor=\"prob\" > Probability </Label>\n                                <Input type=\"text\" id=\"prob\" placeholder=\"0%\" onChange={this.handleInputs(\"probability\")} />\n                            </FormGroup>\n                        </Col>\n                        <Col sm=\"3\">\n                            <FormGroup>\n                                <Label htmlFor=\"tech_func\" > Technical Functionality </Label>\n                                <Input type=\"text\" id=\"tech_func\" placeholder=\"Functional Description\" onChange={this.handleInputs(\"technicalFunctionality\")} />\n                            </FormGroup>\n                        </Col>\n                        <Col sm=\"3\">\n                            <FormGroup>\n                                <Label htmlFor=\"ex_or_pl\" > Expected Order Placement </Label>\n                                <Input type=\"text\" id=\"ex_or_pl\" placeholder=\"With Whom?\" onChange={this.handleInputs(\"expectedOrderPlacement\")} />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <FormGroup >\n                        <Label htmlFor=\"comment\" > Comments </Label>\n                        <Input type=\"text\" id=\"comment\" placeholder=\"Enter Comment\" onChange={this.handleInputs(\"comments\")} />\n                    </FormGroup>\n                    <Button type=\"submit\" size=\"sm\" color=\"primary\" onClick={() => this.postInfo} > < i className=\"fa fa-user\" > </i>Submit</Button >\n                    <Button type=\"reset\" size=\"sm\" color=\"danger\"><i className=\"fa fa-ban\"></i> Reset</Button>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default TenderQuo;","import React, {\n    Component\n} from 'react';\nimport {\n    Col,\n    Nav,\n    NavItem,\n    NavLink,\n    Row,\n    TabContent,\n    TabPane,\n    Form,\n    FormGroup,\n    Button,\n    Card, CardBody, CardHeader, Collapse,\n}\n    from 'reactstrap';\nimport GeneralQuo from './general-quo';\nimport TenderQuo from './tender_quo';\n\nclass CreateQuo extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onEntering = this.onEntering.bind(this);\n        this.onEntered = this.onEntered.bind(this);\n        this.onExiting = this.onExiting.bind(this);\n        this.onExited = this.onExited.bind(this);\n        this.toggle = this.toggle.bind(this);\n        this.toggleAccordion = this.toggleAccordion.bind(this);\n        this.toggleCustom = this.toggleCustom.bind(this);\n        this.toggleFade = this.toggleFade.bind(this);\n        this.state = {\n            collapse: false,\n            accordion: [false, false],\n            custom: [true, false],\n            status: 'Closed',\n            fadeIn: true,\n            timeout: 300,\n        };\n    }\n\n    onEntering() {\n        this.setState({ status: 'Opening...' });\n    }\n\n    onEntered() {\n        this.setState({ status: 'Opened' });\n    }\n\n    onExiting() {\n        this.setState({ status: 'Closing...' });\n    }\n\n    onExited() {\n        this.setState({ status: 'Closed' });\n    }\n\n    toggle() {\n        this.setState({ collapse: !this.state.collapse });\n    }\n\n    toggleAccordion(tab) {\n\n        const prevState = this.state.accordion;\n        const state = prevState.map((x, index) => tab === index ? !x : false);\n\n        this.setState({\n            accordion: state,\n        });\n    }\n\n    toggleCustom(tab) {\n\n        const prevState = this.state.custom;\n        const state = prevState.map((x, index) => tab === index ? !x : false);\n\n        this.setState({\n            custom: state,\n        });\n    }\n\n    toggleFade() {\n        this.setState({ fadeIn: !this.state.fadeIn });\n    }\n\n    render() {\n\n        return (\n            <Row>\n                <Col>\n                    <div id=\"accordion\">\n                        <Card>\n                            <CardHeader id=\"headingOne\">\n                                <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                                    <h5 className=\"m-0 p-0\">Create General Quotation</h5>\n                                </Button>\n                            </CardHeader>\n                            <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                                <CardBody>\n                                    <GeneralQuo />\n                                </CardBody>\n                            </Collapse>\n                        </Card>\n                        <Card>\n                            <CardHeader id=\"headingTwo\">\n                                <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                                    <h5 className=\"m-0 p-0\">Create Tender Quotation</h5>\n                                </Button>\n                            </CardHeader>\n                            <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                                <CardBody>\n                                    <TenderQuo />\n                                </CardBody>\n                            </Collapse>\n                        </Card>\n                    </div>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default CreateQuo;","import React, {\n    Component\n} from 'react';\nimport { Col, ListGroup, ListGroupItem, Row, } from 'reactstrap';\n\n\nclass RfqList extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            list: [],\n        }\n    }\n\n    componentDidMount() {\n        this.fetchPost();\n    }\n\n    fetchPost() {\n\n        fetch('https://brimis-crm-backend.herokuapp.com/crm/quotes/')\n            .then(res => {\n                return res.json();\n            })\n            .then(data => {\n                this.setState({\n                    list: data\n                });\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n    \n    render() {\n        const view = this.state.list.map((item, index) =>\n            <ListGroupItem key={index} tag=\"a\" href=\"#/quotations/rfq_details\">RFQ {item.client} - REF: {item.rfq}\n                <div className=\"card-header-actions\">\n                    <a href=\"#\" rel=\"noreferrer noopener\" className=\"card-header-action\">\n                        <small className=\"text-muted\">delete</small>\n                    </a>\n                </div>\n                <div className=\"card-header-actions\">\n                    <a href=\"#\" rel=\"noreferrer noopener\" className=\"card-header-action\">\n                        <small className=\"text-muted\">edit</small>\n                    </a>\n                </div>\n            </ListGroupItem>\n        )\n        return (\n            <Row>\n                <Col>\n                    <ListGroup>\n                        {view}\n                    </ListGroup>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default RfqList;","import React, {\n    Component\n} from 'react';\nimport { Col, ListGroup, ListGroupItem, Row, } from 'reactstrap';\n\n\nclass TenderList extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            list: [],\n        }\n    }\n\n    componentDidMount() {\n        this.fetchPost();\n    }\n\n    fetchPost() {\n\n        fetch('https://brimis-crm-backend.herokuapp.com/crm/tenders/')\n            .then(res => {\n                return res.json();\n            })\n            .then(data => {\n                this.setState({\n                    list: data\n                });\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n    \n    render() {\n        const view = this.state.list.map((item, index) =>\n            <ListGroupItem key={index} tag=\"a\" href=\"#/quotations/tender_details\">QFT {item.client} - REF: {item.tenderID}\n                <div className=\"card-header-actions\">\n                    <a href=\"#\" rel=\"noreferrer noopener\" className=\"card-header-action\">\n                        <small className=\"text-muted\">delete</small>\n                    </a>\n                </div>\n                <div className=\"card-header-actions\">\n                    <a href=\"#\" rel=\"noreferrer noopener\" className=\"card-header-action\">\n                        <small className=\"text-muted\">edit</small>\n                    </a>\n                </div>\n            </ListGroupItem>\n        )\n        return (\n            <Row>\n                <Col>\n                    <ListGroup>\n                        {view}\n                    </ListGroup>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default TenderList;","import React, {\n    Component\n}\n    from 'react';\nimport {\n    Col,\n    Nav,\n    NavItem,\n    NavLink,\n    Row,\n    TabContent,\n    TabPane,\n    FormGroup,\n    Button,\n    Input,\n    Label,\n    Dropdown, DropdownItem, DropdownMenu, DropdownToggle, Card, CardBody, CardHeader, ListGroup, ListGroupItem, Badge,\n    Form,\n}\n    from 'reactstrap';\nimport classnames from 'classnames';\nimport CreateQuo from '../Inputs/create_quote'\nimport RfqList from './rfq_list';\nimport TenderList from './tender_list';\n\nclass Quotes extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            activeTab: '1',\n            dropdownOpen: new Array(6).fill(false),\n        };\n    }\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab,\n            });\n        }\n    }\n\n    toggleDrop(tab) {\n        const newArray = this.state.dropdownOpen.map((element, index) => {\n            return (index === tab ? !element : false);\n        });\n        this.setState({\n            dropdownOpen: newArray,\n        });\n    }\n\n    render() {\n\n        return (\n            <div>\n                <Row>\n                    <Col>\n                        <Nav tabs>\n                            <NavItem>\n                                <NavLink className={\n                                    classnames({\n                                        active: this.state.activeTab === '1'\n                                    })\n                                }\n                                    onClick={\n                                        () => {\n                                            this.toggle('1');\n                                        }\n                                    } >\n                                    Request For Quotes\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className={\n                                    classnames({\n                                        active: this.state.activeTab === '2'\n                                    })\n                                }\n                                    onClick={\n                                        () => {\n                                            this.toggle('2');\n                                        }\n                                    } >\n                                    Quotes For Tenders\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className={\n                                    classnames({\n                                        active: this.state.activeTab === '3'\n                                    })\n                                }\n                                    onClick={\n                                        () => {\n                                            this.toggle('3');\n                                        }\n                                    } >\n                                    Create Quote\n                                </NavLink>\n                            </NavItem>\n                        </Nav>\n                        <TabContent activeTab={\n                            this.state.activeTab\n                        } >\n                            <TabPane tabId=\"1\" >\n                                <Form action=\"\" method=\"post\" className=\"form-horizontal\">\n                                    <FormGroup row>\n                                        <Col sm=\"12\">\n                                            <Input type=\"search\" name=\"search\" id=\"taskSearch\" placeholder=\"Search quotes\" />\n                                            {/* <Input type=\"text\" placeholder=\"Search\" /> */}\n                                        </Col>\n                                        {/* <Button type=\"submit\" size=\"sm\" color=\"primary\" > < i className=\"fa fa-user\" > </i>Search</Button> */}\n                                    </FormGroup>\n                                </Form>\n                                <RfqList />\n                            </TabPane>\n                            <TabPane tabId=\"2\" >\n                                <Form action=\"\" method=\"post\" className=\"form-horizontal\">\n                                    <FormGroup row>\n                                        <Col sm=\"12\">\n                                            <Input type=\"search\" name=\"search\" id=\"taskSearch\" placeholder=\"Search quotes\" />\n                                            {/* <Input type=\"text\" placeholder=\"Search\" /> */}\n                                        </Col>\n                                        {/* <Button type=\"submit\" size=\"sm\" color=\"primary\" > < i className=\"fa fa-user\" > </i>Search</Button> */}\n                                    </FormGroup>\n                                </Form>\n                                <TenderList />\n                            </TabPane>\n                            <TabPane tabId=\"3\" >\n                                <CreateQuo />\n                            </TabPane>\n                        </TabContent>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Quotes;"],"sourceRoot":""}