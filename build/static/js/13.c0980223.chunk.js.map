{"version":3,"sources":["views/Pages/Orders/products_list.js","views/Pages/Orders/services_list.js","views/Pages/Inputs/product_table.js","views/Pages/Inputs/product_sale.js","views/Pages/Inputs/service_sale.js","views/Pages/Inputs/create_order.js","views/Pages/Orders/orders.js"],"names":["ProductList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","list","fetchPost","_this2","fetch","then","res","json","data","setState","catch","err","console","log","view","map","item","index","react_default","a","createElement","reactstrap_es","key","tag","href","order","ref_number","className","rel","Component","ServiceList","options","value","label","ProductTables","props","handleChange","selectedOption","toggle","bind","assertThisInitialized","activeTab","dropdownOpen","Array","fill","tab","newArray","element","hover","bordered","striped","responsive","size","react_select_esm","onChange","ProductSale","handlePerson","selectedPerson","handleClient","selectedClient","clientList","contactList","fetchList","listItem","listArr","listCon","i","length","client","contact","firstName","clientlist","concat","_this$state","sm","htmlFor","product_table","type","color","ServiceSale","id","placeholder","CreateOrder","onEntering","onEntered","onExiting","onExited","toggleAccordion","toggleCustom","toggleFade","collapse","accordion","custom","status","fadeIn","timeout","x","block","onClick","aria-expanded","aria-controls","isOpen","data-parent","aria-labelledby","product_sale","service_sale","Orders","tabs","classnames","active","tabId","action","method","row","name","products_list","services_list","create_order"],"mappings":"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","file":"static/js/13.c0980223.chunk.js","sourcesContent":["import React, {\n    Component\n} from 'react';\nimport { Col, ListGroup, ListGroupItem, Row, } from 'reactstrap';\n\n\nclass ProductList extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            list: [],\n        }\n    }\n\n    componentDidMount() {\n        this.fetchPost();\n    }\n\n    fetchPost() {\n\n        fetch('https://brimis-crm-backend.herokuapp.com/crm/orders/')\n            .then(res => {\n                return res.json();\n            })\n            .then(data => {\n                this.setState({\n                    list: data\n                });\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    render() {\n        const view = this.state.list.map((item, index) =>\n            <ListGroupItem key={index} tag=\"a\" href=\"#/orders/product_orders\"> {item.order} - REF: {item.ref_number}\n                <div className=\"card-header-actions\">\n                    <a href=\"#\" rel=\"noreferrer noopener\" className=\"card-header-action\">\n                        <small className=\"text-muted\">delete</small>\n                    </a>\n                </div>\n                <div className=\"card-header-actions\">\n                    <a href=\"#\" rel=\"noreferrer noopener\" className=\"card-header-action\">\n                        <small className=\"text-muted\">edit</small>\n                    </a>\n                </div>\n            </ListGroupItem>\n        )\n\n        return (\n            <Row>\n                <Col>\n                    <ListGroup>\n                        {view}\n                    </ListGroup>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default ProductList;","import React, {\n    Component\n} from 'react';\nimport { Col, ListGroup, ListGroupItem, Row, } from 'reactstrap';\n\n\nclass ServiceList extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            list: [],\n        }\n    }\n\n    componentDidMount() {\n        this.fetchPost();\n    }\n\n    fetchPost() {\n\n        fetch('https://brimis-crm-backend.herokuapp.com/crm/orders/')\n            .then(res => {\n                return res.json();\n            })\n            .then(data => {\n                this.setState({\n                    list: data\n                });\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    render() {\n        const view = this.state.list.map((item, index) =>\n            <ListGroupItem key={index} tag=\"a\" href=\"#/orders/serv_orders\"> {item.order} - REF: {item.ref_number}\n                <div className=\"card-header-actions\">\n                    <a href=\"#\" rel=\"noreferrer noopener\" className=\"card-header-action\">\n                        <small className=\"text-muted\">delete</small>\n                    </a>\n                </div>\n                <div className=\"card-header-actions\">\n                    <a href=\"#\" rel=\"noreferrer noopener\" className=\"card-header-action\">\n                        <small className=\"text-muted\">edit</small>\n                    </a>\n                </div>\n            </ListGroupItem>\n        )\n\n        return (\n            <Row>\n                <Col>\n                    <ListGroup>\n                        {view}\n                    </ListGroup>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default ServiceList;","import React, { Component } from 'react';\nimport {\n    Badge, Col, Row, Table,\n    Dropdown, DropdownItem, DropdownMenu, DropdownToggle, }\n    from 'reactstrap';\nimport Select from 'react-select';\n\nconst options = [\n    { value: 'chocolate', label: 'Chocolate' },\n    { value: 'strawberry', label: 'Strawberry' },\n    { value: 'vanilla', label: 'Vanilla' }\n];\n\nclass ProductTables extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            activeTab: '1',\n            dropdownOpen: new Array(6).fill(false),\n            selectedOption: null,\n        };\n    }\n\n    handleChange = (selectedOption) => {\n        this.setState({ selectedOption });\n        console.log(`Option selected:`, selectedOption);\n    }\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab,\n            });\n        }\n    }\n\n    toggleDrop(tab) {\n        const newArray = this.state.dropdownOpen.map((element, index) => {\n            return (index === tab ? !element : false);\n        });\n        this.setState({\n            dropdownOpen: newArray,\n        });\n    }\n\n    render() {\n        const { selectedOption } = this.state;\n        return (\n            <div className=\"animated fadeIn\">\n               \n                       \n                                <Table hover bordered striped responsive size=\"sm\">\n                                    <thead>\n                                        <tr>\n                                            <th>Product</th>\n                                            <th>Quantity</th>\n                                            <th>Price</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                            <td>\n                                <Select\n                                    value={selectedOption}\n                                    onChange={this.handleChange}\n                                    options={options}\n                                />\n                                            </td>\n                                            <td>0</td>\n                                            <td>R0.00</td>\n                                        </tr>\n                                        <tr>\n                            <td><Select\n                                value={selectedOption}\n                                onChange={this.handleChange}\n                                options={options}\n                            /></td>\n                                            <td>0</td>\n                                            <td>R0.00</td>\n                                        </tr>\n                                        <tr>\n                            <td><Select\n                                value={selectedOption}\n                                onChange={this.handleChange}\n                                options={options}\n                            /></td>\n                                            <td>0</td>\n                                            <td>R0.00</td>\n                                        </tr>\n                                        <tr>\n                            <td><Select\n                                value={selectedOption}\n                                onChange={this.handleChange}\n                                options={options}\n                            /></td>\n                                            <td>0</td>\n                                            <td>R0.00</td>\n                                    </tr>\n                                <tr>\n                            <td><Select\n                                value={selectedOption}\n                                onChange={this.handleChange}\n                                options={options}\n                            /></td>\n                                    <td>0</td>\n                                    <td>R0.00</td>\n                                </tr>\n                            </tbody>\n                            <thead>\n                                <tr>\n                                    <th>Total</th>\n                                    <th>0</th>\n                                    <th>R0.00</th>\n                                </tr>\n                            </thead>\n                        </Table>\n            </div>\n\n        );\n    }\n}\n\nexport default ProductTables;\n","import React, {\n    Component\n} from 'react';\nimport {\n    Col,\n    Row,\n    FormGroup,\n    Button,\n    Input,\n    Label,\n    Dropdown, DropdownItem, DropdownMenu, DropdownToggle,\n}\n    from 'reactstrap';\nimport ProductTables from './product_table';\nimport Select from 'react-select';\nimport axios from \"axios\";\n\nclass ProductSale extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            activeTab: '1',\n            dropdownOpen: new Array(6).fill(false),\n            selectedClient: null,\n            selectedPerson: null,\n            clientList: [{\n                value: \"\",\n                label: \"\",\n            }],\n            contactList: [{\n                value: \"\",\n                label: \"\",\n            }],\n        };\n    }\n\n    handlePerson = (selectedPerson) => {\n        this.setState({ selectedPerson });\n        console.log(`Option selected:`, selectedPerson);\n    }\n\n    handleClient = (selectedClient) => {\n        this.setState({ selectedClient });\n        console.log(`Option selected:`, selectedClient);\n    }\n\n    componentDidMount() {\n        this.fetchPost();\n    }\n\n    fetchPost() {\n        let fetchList = [];\n        fetch('https://brimis-crm-backend.herokuapp.com/crm/clientcontacts/')\n            .then(res => {\n                console.log(\"fetched create task clients\");\n                return res.json();\n            })\n            .then(data => {\n                fetchList = data.map((listItem) => {\n                    return listItem\n                })\n            })\n            .catch(err => {\n                console.log(err);\n            })\n            .then(() => {\n                let listArr = [{ value: \"\", label: \"\" },];\n                let listCon = [{ value: \"\", label: \"\" },];\n\n                for (var i = 0; i < fetchList.length; i++) {\n                    listArr[i] = { value: fetchList[i].client[\"name\"], label: fetchList[i].client[\"name\"] };\n                    listCon[i] = { value: fetchList[i].contact.firstName, label: fetchList[i].contact.firstName, }\n                    console.log(listArr[i][\"value\"]);\n                }\n                this.setState({\n                    clientlist: [...listArr],\n                    contactList: [...listCon],\n\n                });\n            });\n    }\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab,\n            });\n        }\n    }\n\n    toggleDrop(tab) {\n        const newArray = this.state.dropdownOpen.map((element, index) => {\n            return (index === tab ? !element : false);\n        });\n        this.setState({\n            dropdownOpen: newArray,\n        });\n    }\n    render() {\n        const { selectedPerson, selectedClient, } = this.state;\n\n        return (\n            <Row>\n                <Col>\n                    <Row>\n                        <Col sm=\"3\">\n                            <Label htmlFor=\"street\" > Company </Label>\n                            <Select\n                                value={selectedClient}\n                                onChange={this.handleClient}\n                                options={this.state.clientlist}\n                            />\n                        </Col>\n                        <Col sm=\"3\">\n                            <Label htmlFor=\"street\" > Contact Person </Label>\n                            <Select\n                                value={selectedPerson}\n                                onChange={this.handlePerson}\n                                options={this.state.contactList}\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <ProductTables />\n                        </Col>\n                    </Row>\n                    <Button type=\"submit\" size=\"sm\" color=\"primary\" > < i className=\"fa fa-user\" > </i>Submit</Button >\n                    <Button type=\"reset\" size=\"sm\" color=\"danger\"><i className=\"fa fa-ban\"></i> Reset</Button>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default ProductSale;","import React, {\n    Component\n} from 'react';\nimport {\n    Col,\n    Row,\n    FormGroup,\n    Button,\n    Input,\n    Label,\n    Dropdown, DropdownItem, DropdownMenu, DropdownToggle,\n}\n    from 'reactstrap';\nimport Select from 'react-select';\n\nconst options = [\n    { value: 'chocolate', label: 'Chocolate' },\n    { value: 'strawberry', label: 'Strawberry' },\n    { value: 'vanilla', label: 'Vanilla' }\n];\n\nclass ServiceSale extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            activeTab: '1',\n            dropdownOpen: new Array(6).fill(false),\n            selectedClient: null,\n            selectedPerson: null,\n            clientList: [{\n                value: \"\",\n                label: \"\",\n            }],\n            contactList: [{\n                value: \"\",\n                label: \"\",\n            }],\n        };\n    }\n\n    handlePerson = (selectedPerson) => {\n        this.setState({ selectedPerson });\n        console.log(`Option selected:`, selectedPerson);\n    }\n\n    handleClient = (selectedClient) => {\n        this.setState({ selectedClient });\n        console.log(`Option selected:`, selectedClient);\n    }\n\n    componentDidMount() {\n        this.fetchPost();\n    }\n\n    fetchPost() {\n        let fetchList = [];\n        fetch('https://brimis-crm-backend.herokuapp.com/crm/clientcontacts/')\n            .then(res => {\n                console.log(\"fetched create task clients\");\n                return res.json();\n            })\n            .then(data => {\n                fetchList = data.map((listItem) => {\n                    return listItem\n                })\n            })\n            .catch(err => {\n                console.log(err);\n            })\n            .then(() => {\n                let listArr = [{ value: \"\", label: \"\" },];\n                let listCon = [{ value: \"\", label: \"\" },];\n\n                for (var i = 0; i < fetchList.length; i++) {\n                    listArr[i] = { value: fetchList[i].client[\"name\"], label: fetchList[i].client[\"name\"] };\n                    listCon[i] = { value: fetchList[i].contact.firstName, label: fetchList[i].contact.firstName, }\n                    console.log(listArr[i][\"value\"]);\n                }\n                this.setState({\n                    clientlist: [...listArr],\n                    contactList: [...listCon],\n\n                });\n            });\n    }\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab,\n            });\n        }\n    }\n\n    handleChange = (selectedOption) => {\n        this.setState({ selectedOption });\n        console.log(`Option selected:`, selectedOption);\n    }\n\n    toggleDrop(tab) {\n        const newArray = this.state.dropdownOpen.map((element, index) => {\n            return (index === tab ? !element : false);\n        });\n        this.setState({\n            dropdownOpen: newArray,\n        });\n    }\n    render() {\n        const { selectedPerson, selectedClient, } = this.state;\n\n        return (\n            <Row>\n                <Col>\n                    <Row>\n                        <Col sm=\"4\">\n                            <Label htmlFor=\"street\" > Client </Label>\n                            <Select\n                                value={selectedClient}\n                                onChange={this.handleClient}\n                                options={this.state.clientlist}\n                            />\n                        </Col>\n                        <Col sm=\"4\">\n                            <Label htmlFor=\"street\" > Contact Person </Label>\n                            <Select\n                                value={selectedPerson}\n                                onChange={this.handlePerson}\n                                options={this.state.contactList}\n                            />\n                        </Col>\n                    </Row>\n                    <FormGroup>\n                        <Label htmlFor=\"country\" > Service Description </Label>\n                        <Input type=\"text\" id=\"country\" placeholder=\"Enter Description\" />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label htmlFor=\"country\" > Price </Label>\n                        <Input type=\"text\" id=\"country\" placeholder=\"R0.00\" />\n                    </FormGroup>\n                    <Button type=\"submit\" size=\"sm\" color=\"primary\" > < i className=\"fa fa-user\" > </i>Submit</Button >\n                    <Button type=\"reset\" size=\"sm\" color=\"danger\"><i className=\"fa fa-ban\"></i> Reset</Button>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default ServiceSale;","import React, {\n    Component\n} from 'react';\nimport {\n    Col,\n    Row,\n    Button, Card, CardBody, CardHeader, Collapse,\n}\n    from 'reactstrap';\nimport ProductSale from './product_sale';\nimport ServiceSale from './service_sale';\n\nclass CreateOrder extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onEntering = this.onEntering.bind(this);\n        this.onEntered = this.onEntered.bind(this);\n        this.onExiting = this.onExiting.bind(this);\n        this.onExited = this.onExited.bind(this);\n        this.toggle = this.toggle.bind(this);\n        this.toggleAccordion = this.toggleAccordion.bind(this);\n        this.toggleCustom = this.toggleCustom.bind(this);\n        this.toggleFade = this.toggleFade.bind(this);\n        this.state = {\n            collapse: false,\n            accordion: [false, false],\n            custom: [true, false],\n            status: 'Closed',\n            fadeIn: true,\n            timeout: 300,\n        };\n    }\n\n    onEntering() {\n        this.setState({ status: 'Opening...' });\n    }\n\n    onEntered() {\n        this.setState({ status: 'Opened' });\n    }\n\n    onExiting() {\n        this.setState({ status: 'Closing...' });\n    }\n\n    onExited() {\n        this.setState({ status: 'Closed' });\n    }\n\n    toggle() {\n        this.setState({ collapse: !this.state.collapse });\n    }\n\n    toggleAccordion(tab) {\n\n        const prevState = this.state.accordion;\n        const state = prevState.map((x, index) => tab === index ? !x : false);\n\n        this.setState({\n            accordion: state,\n        });\n    }\n\n    toggleCustom(tab) {\n\n        const prevState = this.state.custom;\n        const state = prevState.map((x, index) => tab === index ? !x : false);\n\n        this.setState({\n            custom: state,\n        });\n    }\n\n    toggleFade() {\n        this.setState({ fadeIn: !this.state.fadeIn });\n    }\n\n    render() {\n\n        return (\n            <Row>\n                <Col>\n                    <div id=\"accordion\">\n                        <Card>\n                            <CardHeader id=\"headingOne\">\n                                <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                                    <h5 className=\"m-0 p-0\">Create Product Order</h5>\n                                </Button>\n                            </CardHeader>\n                            <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                                <CardBody>\n                                    <ProductSale /> \n                                </CardBody>\n                            </Collapse>\n                        </Card>\n                        <Card>\n                            <CardHeader id=\"headingTwo\">\n                                <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                                    <h5 className=\"m-0 p-0\">Create Service Order</h5>\n                                </Button>\n                            </CardHeader>\n                            <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                                <CardBody>\n                                    <ServiceSale /> \n                                </CardBody>\n                            </Collapse>\n                        </Card>\n                    </div>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default CreateOrder;","import React, {\n    Component\n}\n    from 'react';\nimport {\n    Col,\n    Nav,\n    NavItem,\n    NavLink,\n    Row,\n    TabContent,\n    TabPane,\n    Form,\n    FormGroup,\n    Button,\n    Input,\n    Label,\n    Dropdown, DropdownItem, DropdownMenu, DropdownToggle, Card, CardBody, CardHeader, ListGroup, ListGroupItem, Badge,\n}\n    from 'reactstrap';\nimport classnames from 'classnames';\nimport ProductList from './products_list';\nimport ServiceList from './services_list';\nimport CreateOrder from '../Inputs/create_order';\n\nclass Orders extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            activeTab: '1',\n            dropdownOpen: new Array(6).fill(false),\n        };\n    }\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab,\n            });\n        }\n    }\n\n    toggleDrop(tab) {\n        const newArray = this.state.dropdownOpen.map((element, index) => {\n            return (index === tab ? !element : false);\n        });\n        this.setState({\n            dropdownOpen: newArray,\n        });\n    }\n\n    render() {\n\n        return (\n            <div>\n                <Row>\n                    <Col>\n                        <Nav tabs>\n                            <NavItem>\n                                <NavLink className={\n                                    classnames({\n                                        active: this.state.activeTab === '1'\n                                    })\n                                }\n                                    onClick={\n                                        () => {\n                                            this.toggle('1');\n                                        }\n                                    } >\n                                    Products Ordered\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className={\n                                    classnames({\n                                        active: this.state.activeTab === '2'\n                                    })\n                                }\n                                    onClick={\n                                        () => {\n                                            this.toggle('2');\n                                        }\n                                    } >\n                                    Services Rendered\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className={\n                                    classnames({\n                                        active: this.state.activeTab === '3'\n                                    })\n                                }\n                                    onClick={\n                                        () => {\n                                            this.toggle('3');\n                                        }\n                                    } >\n                                    Create Order\n                                </NavLink>\n                            </NavItem>\n                        </Nav>\n                        <TabContent activeTab={\n                            this.state.activeTab\n                        } >\n                            <TabPane tabId=\"1\" >\n                                <Form action=\"\" method=\"post\" className=\"form-horizontal\">\n                                    <FormGroup row>\n                                        <Col sm=\"12\">\n                                            <Input type=\"search\" name=\"search\" id=\"taskSearch\" placeholder=\"Search products ordered\" />\n                                            {/* <Input type=\"text\" placeholder=\"Search\" /> */}\n                                        </Col>\n                                        {/* <Button type=\"submit\" size=\"sm\" color=\"primary\" > < i className=\"fa fa-user\" > </i>Search</Button> */}\n                                    </FormGroup>\n                                </Form>\n                                <ProductList />\n                            </TabPane>\n                            <TabPane tabId=\"2\" >\n                                <Form action=\"\" method=\"post\" className=\"form-horizontal\">\n                                    <FormGroup row>\n                                        <Col sm=\"12\">\n                                            <Input type=\"search\" name=\"search\" id=\"taskSearch\" placeholder=\"Search services rendered\" />\n                                            {/* <Input type=\"text\" placeholder=\"Search\" /> */}\n                                        </Col>\n                                        {/* <Button type=\"submit\" size=\"sm\" color=\"primary\" > < i className=\"fa fa-user\" > </i>Search</Button> */}\n                                    </FormGroup>\n                                </Form>\n                                <ServiceList />\n                            </TabPane>\n                            <TabPane tabId=\"3\" >\n                                <CreateOrder />\n                            </TabPane>\n                        </TabContent>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Orders;"],"sourceRoot":""}