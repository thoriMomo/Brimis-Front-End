{"map":"{\"version\":3,\"sources\":[\"/goinfre/vsibanyo/brimis-crm-frontend/src/views/Pages/Accounts/account_list.js\",\"/goinfre/vsibanyo/brimis-crm-frontend/src/views/Pages/Accounts/accounts.js\"],\"names\":[\"AccountList\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"list\",\"firstName\",\"lastName\",\"mobileContact\",\"email\",\"console\",\"log\",\"props\",\"getContactDetails\",\"contactID\",\"setState\",\"fetchPost\",\"_this2\",\"fetchList\",\"fetch\",\"then\",\"res\",\"json\",\"data\",\"map\",\"listItem\",\"catch\",\"err\",\"_this3\",\"view\",\"item\",\"index\",\"react_default\",\"a\",\"createElement\",\"reactstrap_es\",\"key\",\"tag\",\"href\",\"onClick\",\"update\",\"contact\",\"client\",\"name\",\"className\",\"rel\",\"Component\",\"options\",\"value\",\"label\",\"Accounts\",\"handleChange\",\"selectedOption\",\"toggle\",\"bind\",\"assertThisInitialized\",\"activeTab\",\"dropdownOpen\",\"Array\",\"fill\",\"tab\",\"newArray\",\"element\",\"sm\",\"tabs\",\"classnames\",\"active\",\"tabId\",\"action\",\"method\",\"row\",\"type\",\"id\",\"placeholder\",\"account_list\",\"htmlFor\",\"react_select_esm\",\"onChange\",\"size\",\"color\",\"xl\",\"pill\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, {\\n    Component\\n} from 'react';\\nimport { Col, ListGroup, ListGroupItem, Row, } from 'reactstrap';\\nimport {\\n  getAccountDetails\\n} from \\\"../../redux/actions/index\\\"\\n\\nconst mapDispatchToProps = dispatch => {\\n  return {\\n    getAccountDetails: accountDetails => dispatch(getAccountDetails(accountDetails))\\n  };\\n};\\n\\n\\nclass AccountList extends Component {\\n\\n    constructor() {\\n        super();\\n        this.state = {\\n            list: [],\\n            firstName: \\\"\\\",\\n        }\\n    }\\n\\n    update(firstName, lastName, mobileContact, email) {\\n        console.log(firstName);\\n        const contactID = 100;\\n        this.props.getContactDetails({\\n            contactID,\\n            firstName,\\n            lastName,\\n            mobileContact,\\n            email\\n        });\\n        this.setState({\\n            firstName: firstName\\n        });\\n    }\\n\\n    componentDidMount() {\\n        this.fetchPost();\\n    }\\n\\n    fetchPost() {\\n        let fetchList = [];\\n        fetch('https://brimis-crm-backend.herokuapp.com/crm/clientcontacts/')\\n            .then(res => {\\n                return res.json();\\n            })\\n            .then(data => {\\n                fetchList = data.map((listItem) => {\\n                    return listItem;\\n                })\\n            })\\n            .then(() => {\\n                this.setState({\\n                    list: fetchList\\n                });\\n            })\\n            .catch(err => {\\n                console.log(err);\\n            });\\n    }\\n    \\n    render() {\\n        const view = this.state.list.map((item, index) =>\\n        <ListGroupItem key={index} tag=\\\"a\\\" href=\\\"#/accounts/details\\\" onClick={() => this.update(item.contact.firstName, item.contact.lastName, item.contact.mobileContact, item.contact.email)}> {item.client.name} | {item.contact.firstName} {item.contact.lastName}\\n            <div className=\\\"card-header-actions\\\">\\n                <a href=\\\"#\\\" rel=\\\"noreferrer noopener\\\" className=\\\"card-header-action\\\">\\n                    <small className=\\\"text-muted\\\">delete</small>\\n                </a>\\n            </div>\\n            <div className=\\\"card-header-actions\\\">\\n                <a href=\\\"#\\\" rel=\\\"noreferrer noopener\\\" className=\\\"card-header-action\\\">\\n                    <small className=\\\"text-muted\\\">edit</small>\\n                </a>\\n            </div>\\n        </ListGroupItem>\\n        )\\n        return (\\n            <Row>\\n                <Col>\\n                    <ListGroup>\\n                        {view}\\n                    </ListGroup>\\n                </Col>\\n            </Row>\\n        );\\n    }\\n}\\n\\nexport default AccountList;\",\"import React, {\\n  Component\\n}\\n  from 'react';\\nimport {\\n  Col,\\n  Nav,\\n  NavItem,\\n  NavLink,\\n  Row,\\n  TabContent,\\n  TabPane,\\n  Form,\\n  FormGroup,\\n  Button,\\n  Input,\\n  Label,\\n  Dropdown, DropdownItem, DropdownMenu, DropdownToggle, Card, CardBody, CardHeader, ListGroup, ListGroupItem, Badge,\\n}\\n  from 'reactstrap';\\nimport classnames from 'classnames';\\nimport AccountList from './account_list'\\nimport Select from 'react-select';\\n\\nconst options = [\\n  { value: 'chocolate', label: 'Chocolate' },\\n  { value: 'strawberry', label: 'Strawberry' },\\n  { value: 'vanilla', label: 'Vanilla' }\\n];\\n\\nclass Accounts extends Component {\\n\\n  constructor(props) {\\n    super(props);\\n\\n    this.toggle = this.toggle.bind(this);\\n    this.state = {\\n      activeTab: '1',\\n      dropdownOpen: new Array(6).fill(false),\\n      selectedOption: null,\\n    };\\n  }\\n\\n  handleChange = (selectedOption) => {\\n    this.setState({ selectedOption });\\n    console.log(`Option selected:`, selectedOption);\\n  }\\n\\n  toggle(tab) {\\n    if (this.state.activeTab !== tab) {\\n      this.setState({\\n        activeTab: tab,\\n      });\\n    }\\n  }\\n\\n  toggleDrop(tab) {\\n    const newArray = this.state.dropdownOpen.map((element, index) => {\\n      return (index === tab ? !element : false);\\n    });\\n    this.setState({\\n      dropdownOpen: newArray,\\n    });\\n  }\\n\\n  render() {\\n    const { selectedOption } = this.state;\\n    return (\\n      <div>\\n        <Row>\\n          <Col sm = \\\"9\\\">\\n            <Nav tabs>\\n              <NavItem>\\n                <NavLink className={\\n                  classnames({\\n                    active: this.state.activeTab === '1'\\n                  })\\n                }\\n                  onClick={\\n                    () => {\\n                      this.toggle('1');\\n                    }\\n                  } >\\n                  Active Accounts\\n                </NavLink>\\n              </NavItem>\\n              <NavItem>\\n                <NavLink className={\\n                  classnames({\\n                    active: this.state.activeTab === '2'\\n                  })\\n                }\\n                  onClick={\\n                    () => {\\n                      this.toggle('2');\\n                    }\\n                  } >\\n                  Completed Accounts\\n                </NavLink>\\n              </NavItem>\\n              <NavItem>\\n                <NavLink className={\\n                  classnames({\\n                    active: this.state.activeTab === '3'\\n                  })\\n                }\\n                  onClick={\\n                    () => {\\n                      this.toggle('3');\\n                    }\\n                  } >\\n                  Create Account\\n                </NavLink>\\n              </NavItem>\\n            </Nav>\\n            <TabContent activeTab={\\n              this.state.activeTab\\n            } >\\n              <TabPane tabId=\\\"1\\\" >\\n                <Form action=\\\"\\\" method=\\\"post\\\" className=\\\"form-horizontal\\\">\\n                  <FormGroup row>\\n                    <Col sm=\\\"12\\\">\\n                      <Input type=\\\"search\\\" name=\\\"search\\\" id=\\\"taskSearch\\\" placeholder=\\\"Search active accounts\\\" />\\n                      {/* <Input type=\\\"text\\\" placeholder=\\\"Search\\\" /> */}\\n                    </Col>\\n                    {/* <Button type=\\\"submit\\\" size=\\\"sm\\\" color=\\\"primary\\\" > < i className=\\\"fa fa-user\\\" > </i>Search</Button> */}\\n                  </FormGroup>\\n                </Form>\\n                <AccountList />\\n              </TabPane>\\n              <TabPane tabId=\\\"2\\\" >\\n                <Form action=\\\"\\\" method=\\\"post\\\" className=\\\"form-horizontal\\\">\\n                  <FormGroup row>\\n                    <Col sm=\\\"12\\\">\\n                      <Input type=\\\"search\\\" name=\\\"search\\\" id=\\\"taskSearch\\\" placeholder=\\\"Search completed accounts\\\" />\\n                      {/* <Input type=\\\"text\\\" placeholder=\\\"Search\\\" /> */}\\n                    </Col>\\n                    {/* <Button type=\\\"submit\\\" size=\\\"sm\\\" color=\\\"primary\\\" > < i className=\\\"fa fa-user\\\" > </i>Search</Button> */}\\n                  </FormGroup>\\n                </Form>\\n                <AccountList />\\n              </TabPane>\\n              <TabPane tabId=\\\"3\\\" >\\n                <Row>\\n                  <Col sm=\\\"12\\\">\\n                    <FormGroup >\\n                      <Label htmlFor=\\\"street\\\" > New Account </Label>\\n                      <Input type=\\\"text\\\" id=\\\"street\\\" placeholder=\\\"Enter account details\\\" />\\n                    </FormGroup>\\n                    <Row>\\n                      <Col sm=\\\"4\\\">\\n                        <Label htmlFor=\\\"street\\\" > Company </Label>\\n                        <Select\\n                          value={selectedOption}\\n                          onChange={this.handleChange}\\n                          options={options}\\n                        />\\n                      </Col>\\n                      <Col sm=\\\"4\\\">\\n                        <Label htmlFor=\\\"street\\\" > Contact Person </Label>\\n                        <Select\\n                          value={selectedOption}\\n                          onChange={this.handleChange}\\n                          options={options}\\n                        />\\n                      </Col>\\n                    </Row>\\n                    <Row>\\n                      <Col>\\n                        <Button type=\\\"submit\\\" size=\\\"sm\\\" color=\\\"primary\\\" > < i className=\\\"fa fa-user\\\" > </i>Create</Button >\\n                        <Button type=\\\"reset\\\" size=\\\"sm\\\" color=\\\"danger\\\"><i className=\\\"fa fa-ban\\\"></i> Reset</Button>\\n                      </Col>\\n                    </Row>\\n                  </Col>\\n                </Row>\\n              </TabPane>\\n            </TabContent>\\n          </Col>\\n          <Col sm=\\\"3\\\" xl=\\\"3\\\">\\n            <Card>\\n              <CardHeader>\\n                <strong>Account Categories</strong>\\n              </CardHeader>\\n              <CardBody>\\n                <ListGroup>\\n                  <ListGroupItem className=\\\"justify-content-between\\\">New Product<Badge className=\\\"float-right\\\" pill color=\\\"warning\\\">1</Badge></ListGroupItem>\\n                  <ListGroupItem className=\\\"justify-content-between\\\">Refurbishments <Badge className=\\\"float-right\\\" pill color=\\\"warning\\\">0</Badge></ListGroupItem>\\n                  <ListGroupItem className=\\\"justify-content-between\\\">Total Accounts <Badge className=\\\"float-right\\\" pill >1</Badge></ListGroupItem>\\n                </ListGroup>\\n              </CardBody>\\n            </Card>\\n          </Col>\\n        </Row>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default Accounts;\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{454:function(e,t,a){\"use strict\";a.r(t);var n=a(7),c=a(8),l=a(10),r=a(9),s=a(11),o=a(27),m=a(1),i=a.n(m),u=a(3),h=a(2),E=a.n(h),d=(a(34),function(e){function t(){var e;return Object(n.a)(this,t),(e=Object(l.a)(this,Object(r.a)(t).call(this))).state={list:[],firstName:\"\"},e}return Object(s.a)(t,e),Object(c.a)(t,[{key:\"update\",value:function(e,t,a,n){console.log(e);this.props.getContactDetails({contactID:100,firstName:e,lastName:t,mobileContact:a,email:n}),this.setState({firstName:e})}},{key:\"componentDidMount\",value:function(){this.fetchPost()}},{key:\"fetchPost\",value:function(){var e=this,t=[];fetch(\"https://brimis-crm-backend.herokuapp.com/crm/clientcontacts/\").then(function(e){return e.json()}).then(function(e){t=e.map(function(e){return e})}).then(function(){e.setState({list:t})}).catch(function(e){console.log(e)})}},{key:\"render\",value:function(){var e=this,t=this.state.list.map(function(t,a){return i.a.createElement(u.A,{key:a,tag:\"a\",href:\"#/accounts/details\",onClick:function(){return e.update(t.contact.firstName,t.contact.lastName,t.contact.mobileContact,t.contact.email)}},\" \",t.client.name,\" | \",t.contact.firstName,\" \",t.contact.lastName,i.a.createElement(\"div\",{className:\"card-header-actions\"},i.a.createElement(\"a\",{href:\"#\",rel:\"noreferrer noopener\",className:\"card-header-action\"},i.a.createElement(\"small\",{className:\"text-muted\"},\"delete\"))),i.a.createElement(\"div\",{className:\"card-header-actions\"},i.a.createElement(\"a\",{href:\"#\",rel:\"noreferrer noopener\",className:\"card-header-action\"},i.a.createElement(\"small\",{className:\"text-muted\"},\"edit\"))))});return i.a.createElement(u.F,null,i.a.createElement(u.k,null,i.a.createElement(u.z,null,t)))}}]),t}(m.Component)),f=a(199),p=[{value:\"chocolate\",label:\"Chocolate\"},{value:\"strawberry\",label:\"Strawberry\"},{value:\"vanilla\",label:\"Vanilla\"}],b=function(e){function t(e){var a;return Object(n.a)(this,t),(a=Object(l.a)(this,Object(r.a)(t).call(this,e))).handleChange=function(e){a.setState({selectedOption:e}),console.log(\"Option selected:\",e)},a.toggle=a.toggle.bind(Object(o.a)(Object(o.a)(a))),a.state={activeTab:\"1\",dropdownOpen:new Array(6).fill(!1),selectedOption:null},a}return Object(s.a)(t,e),Object(c.a)(t,[{key:\"toggle\",value:function(e){this.state.activeTab!==e&&this.setState({activeTab:e})}},{key:\"toggleDrop\",value:function(e){var t=this.state.dropdownOpen.map(function(t,a){return a===e&&!t});this.setState({dropdownOpen:t})}},{key:\"render\",value:function(){var e=this,t=this.state.selectedOption;return i.a.createElement(\"div\",null,i.a.createElement(u.F,null,i.a.createElement(u.k,{sm:\"9\"},i.a.createElement(u.B,{tabs:!0},i.a.createElement(u.C,null,i.a.createElement(u.D,{className:E()({active:\"1\"===this.state.activeTab}),onClick:function(){e.toggle(\"1\")}},\"Active Accounts\")),i.a.createElement(u.C,null,i.a.createElement(u.D,{className:E()({active:\"2\"===this.state.activeTab}),onClick:function(){e.toggle(\"2\")}},\"Completed Accounts\")),i.a.createElement(u.C,null,i.a.createElement(u.D,{className:E()({active:\"3\"===this.state.activeTab}),onClick:function(){e.toggle(\"3\")}},\"Create Account\"))),i.a.createElement(u.G,{activeTab:this.state.activeTab},i.a.createElement(u.H,{tabId:\"1\"},i.a.createElement(u.r,{action:\"\",method:\"post\",className:\"form-horizontal\"},i.a.createElement(u.s,{row:!0},i.a.createElement(u.k,{sm:\"12\"},i.a.createElement(u.t,{type:\"search\",name:\"search\",id:\"taskSearch\",placeholder:\"Search active accounts\"})))),i.a.createElement(d,null)),i.a.createElement(u.H,{tabId:\"2\"},i.a.createElement(u.r,{action:\"\",method:\"post\",className:\"form-horizontal\"},i.a.createElement(u.s,{row:!0},i.a.createElement(u.k,{sm:\"12\"},i.a.createElement(u.t,{type:\"search\",name:\"search\",id:\"taskSearch\",placeholder:\"Search completed accounts\"})))),i.a.createElement(d,null)),i.a.createElement(u.H,{tabId:\"3\"},i.a.createElement(u.F,null,i.a.createElement(u.k,{sm:\"12\"},i.a.createElement(u.s,null,i.a.createElement(u.y,{htmlFor:\"street\"},\" New Account \"),i.a.createElement(u.t,{type:\"text\",id:\"street\",placeholder:\"Enter account details\"})),i.a.createElement(u.F,null,i.a.createElement(u.k,{sm:\"4\"},i.a.createElement(u.y,{htmlFor:\"street\"},\" Company \"),i.a.createElement(f.a,{value:t,onChange:this.handleChange,options:p})),i.a.createElement(u.k,{sm:\"4\"},i.a.createElement(u.y,{htmlFor:\"street\"},\" Contact Person \"),i.a.createElement(f.a,{value:t,onChange:this.handleChange,options:p}))),i.a.createElement(u.F,null,i.a.createElement(u.k,null,i.a.createElement(u.e,{type:\"submit\",size:\"sm\",color:\"primary\"},\" \",i.a.createElement(\"i\",{className:\"fa fa-user\"},\" \"),\"Create\"),i.a.createElement(u.e,{type:\"reset\",size:\"sm\",color:\"danger\"},i.a.createElement(\"i\",{className:\"fa fa-ban\"}),\" Reset\")))))))),i.a.createElement(u.k,{sm:\"3\",xl:\"3\"},i.a.createElement(u.f,null,i.a.createElement(u.j,null,i.a.createElement(\"strong\",null,\"Account Categories\")),i.a.createElement(u.g,null,i.a.createElement(u.z,null,i.a.createElement(u.A,{className:\"justify-content-between\"},\"New Product\",i.a.createElement(u.b,{className:\"float-right\",pill:!0,color:\"warning\"},\"1\")),i.a.createElement(u.A,{className:\"justify-content-between\"},\"Refurbishments \",i.a.createElement(u.b,{className:\"float-right\",pill:!0,color:\"warning\"},\"0\")),i.a.createElement(u.A,{className:\"justify-content-between\"},\"Total Accounts \",i.a.createElement(u.b,{className:\"float-right\",pill:!0},\"1\"))))))))}}]),t}(m.Component);t.default=b}}]);","extractedComments":[]}