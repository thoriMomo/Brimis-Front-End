{"ast":null,"code":"import _classCallCheck from \"/goinfre/vsibanyo/Documents/GitHub/Brimis-Front-End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/goinfre/vsibanyo/Documents/GitHub/Brimis-Front-End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/goinfre/vsibanyo/Documents/GitHub/Brimis-Front-End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/goinfre/vsibanyo/Documents/GitHub/Brimis-Front-End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/goinfre/vsibanyo/Documents/GitHub/Brimis-Front-End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/goinfre/vsibanyo/Documents/GitHub/Brimis-Front-End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/goinfre/vsibanyo/Documents/GitHub/Brimis-Front-End/src/views/Pages/Inputs/create_lead.js\";\nimport React, { Component } from 'react';\nimport { Col, Row, FormGroup, Button, Input, Label, Dropdown, DropdownItem, DropdownMenu, DropdownToggle } from 'reactstrap';\nimport axios from 'axios';\nimport Select from 'react-select';\n\nvar CreateLead =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateLead, _Component);\n\n  function CreateLead(props) {\n    var _this;\n\n    _classCallCheck(this, CreateLead);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateLead).call(this, props));\n\n    _this.handleContact = function (selectedContact) {\n      _this.setState({\n        selectedContact: selectedContact\n      });\n\n      console.log(\"Category selected:\", selectedContact[\"value\"]);\n    };\n\n    _this.handleClient = function (selectedClient) {\n      _this.setState({\n        selectedClient: selectedClient\n      });\n\n      console.log(\"Client selected:\", selectedClient[\"value\"]);\n    };\n\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInputs = _this.handleInputs.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      activeTab: '1',\n      dropdownOpen: new Array(6).fill(false),\n      clientList: [{\n        value: \"\",\n        label: \"\"\n      }],\n      contactList: [{\n        value: \"\",\n        label: \"\"\n      }],\n      selectedContact: \"\",\n      selectedClient: \"\" // clientsArr: [],\n      // contactsArr: [],\n\n    };\n    return _this;\n  }\n\n  _createClass(CreateLead, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchPost();\n    }\n  }, {\n    key: \"fetchPost\",\n    value: function fetchPost() {\n      var _this2 = this;\n\n      var fetchList = [];\n      fetch('https://brimis-crm-backend.herokuapp.com/crm/clientcontacts/').then(function (res) {\n        console.log(\"fetched create lead clients\");\n        return res.json();\n      }).then(function (data) {\n        // let fList = data.map((theList) => {return theList})\n        fetchList = data.map(function (listItem) {\n          return listItem;\n        });\n      }).catch(function (err) {\n        console.log(err);\n      }).then(function () {\n        var listArr = [{\n          value: \"\",\n          label: \"\"\n        }];\n        var listCon = [{\n          value: \"\",\n          label: \"\"\n        }];\n\n        for (var i = 0; i < fetchList.length; i++) {\n          listArr[i] = {\n            value: fetchList[i].client[\"name\"],\n            label: fetchList[i].client[\"name\"]\n          };\n          listCon[i] = {\n            value: fetchList[i].contact.firstName,\n            label: fetchList[i].contact.firstName\n          };\n          console.log(listArr[i][\"value\"]);\n        }\n\n        _this2.setState({\n          clientlist: listArr.concat(),\n          contactList: listCon.concat()\n        });\n      });\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(tab) {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"toggleDrop\",\n    value: function toggleDrop(tab) {\n      var newArray = this.state.dropdownOpen.map(function (element, index) {\n        return index === tab ? !element : false;\n      });\n      this.setState({\n        dropdownOpen: newArray\n      });\n    }\n  }, {\n    key: \"handleInputs\",\n    value: function handleInputs(key) {\n      return function (e) {\n        var state = {};\n        state[key] = e.target.value;\n        console.log(e.target.value);\n        this.setState(state);\n      }.bind(this);\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {\n      var clnt = \"\";\n      axios.post('https://brimis-crm-backend.herokuapp.com/crm/leads/create/', {\n        client: this.state.selectedClient[\"Label\"],\n        //this.state.selectedClient['value'],\n        createdBy: \"sanelesazi\",\n        // dateCreated: \"01-01-1970\",\n        clientContact: this.state.selectedContact // feedback: \"\"\n\n      }).then(function () {\n        clnt = this.state.selectedClient;\n        console.log(clnt);\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (err) {\n        console.log(err.response);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          selectedContact = _this$state.selectedContact,\n          selectedClient = _this$state.selectedClient;\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"clients\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \" Client \"), React.createElement(Select, {\n        value: this.state.selectedClient,\n        onChange: this.handleClient // onChange={(e) => this.setState({selectedClient: e.target.value})}\n        ,\n        options: this.state.clientlist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"contact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \" Contact Person \"), React.createElement(Select, {\n        value: selectedContact,\n        onChange: this.handleContact,\n        options: this.state.contactList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"country\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \" Lead Feedback \"), React.createElement(Input, {\n        type: \"text\",\n        id: \"country\",\n        placeholder: \"Enter Feedback\",\n        onChange: this.handleInputs(\"feedback\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"submit\",\n        size: \"sm\",\n        color: \"primary\",\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \" \", React.createElement(\"i\", {\n        className: \"fa fa-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \" \"), \"Submit\"), React.createElement(Button, {\n        type: \"reset\",\n        size: \"sm\",\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), \" Reset\")));\n    }\n  }]);\n\n  return CreateLead;\n}(Component);\n\nexport default CreateLead;","map":{"version":3,"sources":["/goinfre/vsibanyo/Documents/GitHub/Brimis-Front-End/src/views/Pages/Inputs/create_lead.js"],"names":["React","Component","Col","Row","FormGroup","Button","Input","Label","Dropdown","DropdownItem","DropdownMenu","DropdownToggle","axios","Select","CreateLead","props","handleContact","selectedContact","setState","console","log","handleClient","selectedClient","toggle","bind","handleClick","handleInputs","state","activeTab","dropdownOpen","Array","fill","clientList","value","label","contactList","fetchPost","fetchList","fetch","then","res","json","data","map","listItem","catch","err","listArr","listCon","i","length","client","contact","firstName","clientlist","tab","newArray","element","index","key","e","target","clnt","post","createdBy","clientContact","response"],"mappings":"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","sourcesContent":["import React, {\n    Component\n} from 'react';\nimport {\n    Col,\n    Row,\n    FormGroup,\n    Button,\n    Input,\n    Label,\n    Dropdown, DropdownItem, DropdownMenu, DropdownToggle,\n}\n    from 'reactstrap';\nimport axios from 'axios';\nimport Select from 'react-select';\n\nclass CreateLead extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleInputs = this.handleInputs.bind(this);\n        this.state = {\n            activeTab: '1',\n            dropdownOpen: new Array(6).fill(false),\n            clientList: [{\n                value: \"\",\n                label: \"\",\n            }],\n            contactList: [{\n                value: \"\",\n                label: \"\",\n            }],\n            selectedContact: \"\",\n            selectedClient: \"\",\n            // clientsArr: [],\n            // contactsArr: [],\n        };\n    }\n\n    componentDidMount() {\n        this.fetchPost();\n    }\n\n    fetchPost() {\n        let fetchList = [];\n        fetch('https://brimis-crm-backend.herokuapp.com/crm/clientcontacts/')\n            .then(res => {\n                console.log(\"fetched create lead clients\");\n                return res.json();\n            })\n            .then(data => {\n                // let fList = data.map((theList) => {return theList})\n                fetchList = data.map((listItem) => {\n                    return listItem\n                })\n            })\n            .catch(err => {\n                console.log(err);\n            })\n            .then(() => {\n                let listArr = [{ value: \"\", label: \"\" },];\n                let listCon = [{ value: \"\", label: \"\"},];\n\n                for (var i = 0; i < fetchList.length; i++) {\n                    listArr[i] = { value: fetchList[i].client[\"name\"], label: fetchList[i].client[\"name\"] };\n                    listCon[i] = { value: fetchList[i].contact.firstName, label: fetchList[i].contact.firstName,}\n                    console.log(listArr[i][\"value\"]);\n                }\n                this.setState({\n                    clientlist: [...listArr],\n                    contactList: [...listCon],\n\n                });\n            });\n    }\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab,\n            });\n        }\n    }\n\n    toggleDrop(tab) {\n        const newArray = this.state.dropdownOpen.map((element, index) => {\n            return (index === tab ? !element : false);\n        });\n        this.setState({\n            dropdownOpen: newArray,\n        });\n    }\n\n    handleContact = (selectedContact) => {\n        this.setState({ selectedContact });\n        console.log(`Category selected:`, selectedContact[\"value\"]);\n    }\n\n    handleClient = (selectedClient) => {\n\n        this.setState({ selectedClient });\n        console.log(`Client selected:`, selectedClient[\"value\"]);\n    }\n\n    handleInputs(key) {\n        return function (e) {\n            var state = {};\n            state[key] = e.target.value;\n            console.log(e.target.value);\n            this.setState(state);\n        }.bind(this);\n    }\n\n    handleClick() {\n        let clnt = \"\";\n        axios.post('https://brimis-crm-backend.herokuapp.com/crm/leads/create/', {\n            client: this.state.selectedClient[\"Label\"],//this.state.selectedClient['value'],\n            createdBy: \"sanelesazi\",\n            // dateCreated: \"01-01-1970\",\n            clientContact: this.state.selectedContact\n            // feedback: \"\"\n        })\n        .then (function (){\n            clnt = this.state.selectedClient\n            console.log(clnt);\n        })\n        .then(function (response) {\n            console.log(response);\n        })\n        .catch(function (err) {\n            console.log(err.response);\n        });\n    }\n\n    render() {\n        const { selectedContact, selectedClient } = this.state;\n\n        return (\n            <Row>\n                <Col>\n                        <Row>\n                            <Col sm=\"4\">\n                                <Label htmlFor=\"clients\" > Client </Label>                                    \n                                <Select\n                                    value={this.state.selectedClient}\n                                    onChange={this.handleClient}\n                                    // onChange={(e) => this.setState({selectedClient: e.target.value})}\n                                    options={this.state.clientlist}>\n                                </Select>\n                            </Col>\n                            <Col sm=\"4\">\n                                <Label htmlFor=\"contact\" > Contact Person </Label>\n                                <Select\n                                    value={selectedContact}\n                                    onChange={this.handleContact}\n                                    options={this.state.contactList}\n                                />\n                            </Col>\n                        </Row>\n                    <FormGroup >\n                        <Label htmlFor=\"country\" > Lead Feedback </Label>\n                        <Input type=\"text\" id=\"country\" placeholder=\"Enter Feedback\" onChange={this.handleInputs(\"feedback\")}/>\n                    </FormGroup>\n                    <Button type=\"submit\" size=\"sm\" color=\"primary\" onClick={this.handleClick} > < i className=\"fa fa-user\" > </i>Submit</Button >\n                    <Button type=\"reset\" size=\"sm\" color=\"danger\"><i className=\"fa fa-ban\"></i> Reset</Button>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default CreateLead;"]},"metadata":{},"sourceType":"module"}