{"ast":null,"code":"import _classCallCheck from \"/Users/sazi/Desktop/BrimisFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sazi/Desktop/BrimisFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sazi/Desktop/BrimisFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sazi/Desktop/BrimisFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sazi/Desktop/BrimisFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/sazi/Desktop/BrimisFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/sazi/Desktop/BrimisFrontEnd/src/views/Pages/Inputs/service_sale.js\";\nimport React, { Component } from 'react';\nimport { Col, Row, FormGroup, Button, Input, Label, Dropdown, DropdownItem, DropdownMenu, DropdownToggle } from 'reactstrap';\nimport Select from 'react-select';\nvar options = [{\n  value: 'chocolate',\n  label: 'Chocolate'\n}, {\n  value: 'strawberry',\n  label: 'Strawberry'\n}, {\n  value: 'vanilla',\n  label: 'Vanilla'\n}];\n\nvar ServiceSale =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ServiceSale, _Component);\n\n  function ServiceSale(props) {\n    var _this;\n\n    _classCallCheck(this, ServiceSale);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ServiceSale).call(this, props));\n\n    _this.handlePerson = function (selectedPerson) {\n      _this.setState({\n        selectedPerson: selectedPerson\n      });\n\n      console.log(\"Option selected:\", selectedPerson);\n    };\n\n    _this.handleClient = function (selectedClient) {\n      _this.setState({\n        selectedClient: selectedClient\n      });\n\n      console.log(\"Option selected:\", selectedClient);\n    };\n\n    _this.handleChange = function (selectedOption) {\n      _this.setState({\n        selectedOption: selectedOption\n      });\n\n      console.log(\"Option selected:\", selectedOption);\n    };\n\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      activeTab: '1',\n      dropdownOpen: new Array(6).fill(false),\n      selectedClient: null,\n      selectedPerson: null,\n      clientList: [{\n        value: \"\",\n        label: \"\"\n      }],\n      contactList: [{\n        value: \"\",\n        label: \"\"\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(ServiceSale, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchPost();\n    }\n  }, {\n    key: \"fetchPost\",\n    value: function fetchPost() {\n      var _this2 = this;\n\n      var fetchList = [];\n      fetch('https://brimis-crm-backend.herokuapp.com/crm/clientcontacts/').then(function (res) {\n        console.log(\"fetched create task clients\");\n        return res.json();\n      }).then(function (data) {\n        fetchList = data.map(function (listItem) {\n          return listItem;\n        });\n      }).catch(function (err) {\n        console.log(err);\n      }).then(function () {\n        var listArr = [{\n          value: \"\",\n          label: \"\"\n        }];\n        var listCon = [{\n          value: \"\",\n          label: \"\"\n        }];\n\n        for (var i = 0; i < fetchList.length; i++) {\n          listArr[i] = {\n            value: fetchList[i].client[\"name\"],\n            label: fetchList[i].client[\"name\"]\n          };\n          listCon[i] = {\n            value: fetchList[i].contact.firstName,\n            label: fetchList[i].contact.firstName\n          };\n          console.log(listArr[i][\"value\"]);\n        }\n\n        _this2.setState({\n          clientlist: listArr.concat(),\n          contactList: listCon.concat()\n        });\n      });\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(tab) {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"toggleDrop\",\n    value: function toggleDrop(tab) {\n      var newArray = this.state.dropdownOpen.map(function (element, index) {\n        return index === tab ? !element : false;\n      });\n      this.setState({\n        dropdownOpen: newArray\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          selectedPerson = _this$state.selectedPerson,\n          selectedClient = _this$state.selectedClient;\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"street\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \" Client \"), React.createElement(Select, {\n        value: selectedClient,\n        onChange: this.handleClient,\n        options: this.state.clientlist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"street\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \" Contact Person \"), React.createElement(Select, {\n        value: selectedPerson,\n        onChange: this.handlePerson,\n        options: this.state.contactList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"country\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \" Service Description \"), React.createElement(Input, {\n        type: \"text\",\n        id: \"country\",\n        placeholder: \"Enter Description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"country\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \" Price \"), React.createElement(Input, {\n        type: \"text\",\n        id: \"country\",\n        placeholder: \"R0.00\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"submit\",\n        size: \"sm\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \" \", React.createElement(\"i\", {\n        className: \"fa fa-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \" \"), \"Submit\"), React.createElement(Button, {\n        type: \"reset\",\n        size: \"sm\",\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), \" Reset\")));\n    }\n  }]);\n\n  return ServiceSale;\n}(Component);\n\nexport default ServiceSale;","map":{"version":3,"sources":["/Users/sazi/Desktop/BrimisFrontEnd/src/views/Pages/Inputs/service_sale.js"],"names":["React","Component","Col","Row","FormGroup","Button","Input","Label","Dropdown","DropdownItem","DropdownMenu","DropdownToggle","Select","options","value","label","ServiceSale","props","handlePerson","selectedPerson","setState","console","log","handleClient","selectedClient","handleChange","selectedOption","toggle","bind","state","activeTab","dropdownOpen","Array","fill","clientList","contactList","fetchPost","fetchList","fetch","then","res","json","data","map","listItem","catch","err","listArr","listCon","i","length","client","contact","firstName","clientlist","tab","newArray","element","index"],"mappings":"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","sourcesContent":["import React, {\n    Component\n} from 'react';\nimport {\n    Col,\n    Row,\n    FormGroup,\n    Button,\n    Input,\n    Label,\n    Dropdown, DropdownItem, DropdownMenu, DropdownToggle,\n}\n    from 'reactstrap';\nimport Select from 'react-select';\n\nconst options = [\n    { value: 'chocolate', label: 'Chocolate' },\n    { value: 'strawberry', label: 'Strawberry' },\n    { value: 'vanilla', label: 'Vanilla' }\n];\n\nclass ServiceSale extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            activeTab: '1',\n            dropdownOpen: new Array(6).fill(false),\n            selectedClient: null,\n            selectedPerson: null,\n            clientList: [{\n                value: \"\",\n                label: \"\",\n            }],\n            contactList: [{\n                value: \"\",\n                label: \"\",\n            }],\n        };\n    }\n\n    handlePerson = (selectedPerson) => {\n        this.setState({ selectedPerson });\n        console.log(`Option selected:`, selectedPerson);\n    }\n\n    handleClient = (selectedClient) => {\n        this.setState({ selectedClient });\n        console.log(`Option selected:`, selectedClient);\n    }\n\n    componentDidMount() {\n        this.fetchPost();\n    }\n\n    fetchPost() {\n        let fetchList = [];\n        fetch('https://brimis-crm-backend.herokuapp.com/crm/clientcontacts/')\n            .then(res => {\n                console.log(\"fetched create task clients\");\n                return res.json();\n            })\n            .then(data => {\n                fetchList = data.map((listItem) => {\n                    return listItem\n                })\n            })\n            .catch(err => {\n                console.log(err);\n            })\n            .then(() => {\n                let listArr = [{ value: \"\", label: \"\" },];\n                let listCon = [{ value: \"\", label: \"\" },];\n\n                for (var i = 0; i < fetchList.length; i++) {\n                    listArr[i] = { value: fetchList[i].client[\"name\"], label: fetchList[i].client[\"name\"] };\n                    listCon[i] = { value: fetchList[i].contact.firstName, label: fetchList[i].contact.firstName, }\n                    console.log(listArr[i][\"value\"]);\n                }\n                this.setState({\n                    clientlist: [...listArr],\n                    contactList: [...listCon],\n\n                });\n            });\n    }\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab,\n            });\n        }\n    }\n\n    handleChange = (selectedOption) => {\n        this.setState({ selectedOption });\n        console.log(`Option selected:`, selectedOption);\n    }\n\n    toggleDrop(tab) {\n        const newArray = this.state.dropdownOpen.map((element, index) => {\n            return (index === tab ? !element : false);\n        });\n        this.setState({\n            dropdownOpen: newArray,\n        });\n    }\n    render() {\n        const { selectedPerson, selectedClient, } = this.state;\n\n        return (\n            <Row>\n                <Col>\n                    <Row>\n                        <Col sm=\"4\">\n                            <Label htmlFor=\"street\" > Client </Label>\n                            <Select\n                                value={selectedClient}\n                                onChange={this.handleClient}\n                                options={this.state.clientlist}\n                            />\n                        </Col>\n                        <Col sm=\"4\">\n                            <Label htmlFor=\"street\" > Contact Person </Label>\n                            <Select\n                                value={selectedPerson}\n                                onChange={this.handlePerson}\n                                options={this.state.contactList}\n                            />\n                        </Col>\n                    </Row>\n                    <FormGroup>\n                        <Label htmlFor=\"country\" > Service Description </Label>\n                        <Input type=\"text\" id=\"country\" placeholder=\"Enter Description\" />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label htmlFor=\"country\" > Price </Label>\n                        <Input type=\"text\" id=\"country\" placeholder=\"R0.00\" />\n                    </FormGroup>\n                    <Button type=\"submit\" size=\"sm\" color=\"primary\" > < i className=\"fa fa-user\" > </i>Submit</Button >\n                    <Button type=\"reset\" size=\"sm\" color=\"danger\"><i className=\"fa fa-ban\"></i> Reset</Button>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default ServiceSale;"]},"metadata":{},"sourceType":"module"}