{"ast":null,"code":"import _classCallCheck from \"/goinfre/vsibanyo/Documents/GitHub/Brimis-Front-End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/goinfre/vsibanyo/Documents/GitHub/Brimis-Front-End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/goinfre/vsibanyo/Documents/GitHub/Brimis-Front-End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/goinfre/vsibanyo/Documents/GitHub/Brimis-Front-End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/goinfre/vsibanyo/Documents/GitHub/Brimis-Front-End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/goinfre/vsibanyo/Documents/GitHub/Brimis-Front-End/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/goinfre/vsibanyo/Documents/GitHub/Brimis-Front-End/src/views/Pages/Inputs/general-quo.js\";\nimport React, { Component } from 'react';\nimport { Col, Row, FormGroup, Button, Input, Label, Dropdown, DropdownItem, DropdownMenu, DropdownToggle } from 'reactstrap';\nimport axios from \"axios\";\nimport Select from 'react-select';\n\nvar GeneralQuo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GeneralQuo, _Component);\n\n  function GeneralQuo(props) {\n    var _this;\n\n    _classCallCheck(this, GeneralQuo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GeneralQuo).call(this, props));\n\n    _this.handlePerson = function (selectedPerson) {\n      _this.setState({\n        selectedPerson: selectedPerson\n      });\n\n      console.log(\"Option selected:\", selectedPerson);\n    };\n\n    _this.handleClient = function (selectedClient) {\n      _this.setState({\n        selectedClient: selectedClient\n      });\n\n      console.log(\"Option selected:\", selectedClient);\n    };\n\n    _this.handleType = function (selectedType) {\n      _this.setState({\n        selectedType: selectedType\n      });\n\n      console.log(\"Option selected:\", selectedType);\n    };\n\n    _this.handleChoice = function (selectedChoice) {\n      _this.setState({\n        selectedChoice: selectedChoice\n      });\n\n      console.log(\"Option selected:\", selectedChoice);\n    };\n\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.postInfo = _this.postInfo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInputs = _this.handleInputs.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      activeTab: '1',\n      dropdownOpen: new Array(6).fill(false),\n      clientList: [{\n        value: \"\",\n        label: \"\"\n      }],\n      contactList: [{\n        value: \"\",\n        label: \"\"\n      }],\n      selectedClient: null,\n      selectedPerson: null,\n      selectedType: null,\n      selectedChoice: null,\n      client: \"\",\n      createdBy: \"\",\n      rfq: \"\",\n      quoteType: \"\",\n      description: \"\",\n      dateReceived: \"\",\n      deadline: \"\",\n      time: \"\",\n      isSubmitted: \"\",\n      comments: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(GeneralQuo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchPost();\n    }\n  }, {\n    key: \"fetchPost\",\n    value: function fetchPost() {\n      var _this2 = this;\n\n      var fetchList = [];\n      fetch('https://brimis-crm-backend.herokuapp.com/crm/clientcontacts/').then(function (res) {\n        console.log(\"fetched create task clients\");\n        return res.json();\n      }).then(function (data) {\n        fetchList = data.map(function (listItem) {\n          return listItem;\n        });\n      }).catch(function (err) {\n        console.log(err);\n      }).then(function () {\n        var listArr = [{\n          value: \"\",\n          label: \"\"\n        }];\n        var listCon = [{\n          value: \"\",\n          label: \"\"\n        }];\n\n        for (var i = 0; i < fetchList.length; i++) {\n          listArr[i] = {\n            value: fetchList[i].client[\"name\"],\n            label: fetchList[i].client[\"name\"]\n          };\n          listCon[i] = {\n            value: fetchList[i].contact.firstName,\n            label: fetchList[i].contact.firstName\n          };\n          console.log(listArr[i][\"value\"]);\n        }\n\n        _this2.setState({\n          clientlist: listArr.concat(),\n          contactList: listCon.concat()\n        });\n      });\n    }\n  }, {\n    key: \"handleInputs\",\n    value: function handleInputs(key) {\n      return function (e) {\n        var state = {};\n        state[key] = e.target.value;\n        this.setState(state);\n      }.bind(this);\n    }\n  }, {\n    key: \"postInfo\",\n    value: function postInfo() {\n      axios.post('https://brimis-crm-backend.herokuapp.com/crm/quotes/create/', {\n        client: \"\",\n        createdBy: \"\",\n        rfq: \"\",\n        quoteType: \"\",\n        description: \"\",\n        dateReceived: \"\",\n        deadline: \"\",\n        time: \"\",\n        isSubmitted: \"\",\n        comments: \"\"\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(tab) {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"toggleDrop\",\n    value: function toggleDrop(tab) {\n      var newArray = this.state.dropdownOpen.map(function (element, index) {\n        return index === tab ? !element : false;\n      });\n      this.setState({\n        dropdownOpen: newArray\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          selectedPerson = _this$state.selectedPerson,\n          selectedClient = _this$state.selectedClient,\n          selectedType = _this$state.selectedType,\n          selectedChoice = _this$state.selectedChoice;\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"street\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \" Client \"), React.createElement(Select, {\n        value: selectedClient,\n        onChange: this.handleClient,\n        options: this.state.clientlist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"street\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \" Contact Person \"), React.createElement(Select, {\n        value: selectedPerson,\n        onChange: this.handlePerson,\n        options: this.state.contactList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"street\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \" Quote Type \"), React.createElement(Select, {\n        value: selectedType,\n        onChange: this.handleType,\n        options: [{\n          value: 'product',\n          label: 'Product'\n        }, {\n          value: 'service',\n          label: 'Service'\n        }, {\n          value: 'other',\n          label: 'Other'\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"country\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \" Description \"), React.createElement(Input, {\n        type: \"text\",\n        id: \"country\",\n        placeholder: \"Enter Description\",\n        onChange: this.handleInputs(\"description\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"deadline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \" DeadLine \"), React.createElement(Input, {\n        type: \"date\",\n        name: \"deadline\",\n        id: \"deadLine\",\n        placeholder: \"DD/MM/YY\",\n        onChange: this.handleInputs(\"deadline\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Time \"), React.createElement(Input, {\n        type: \"time\",\n        name: \"time\",\n        id: \"time\",\n        placeholder: \"00h00\",\n        onChange: this.handleInputs(\"time\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"street\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \" Submitted \"), React.createElement(Select, {\n        value: selectedChoice,\n        onChange: this.handleChoice,\n        options: [{\n          value: 'yes',\n          label: 'Yes'\n        }, {\n          value: 'no',\n          label: 'No'\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"country\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \" Comments \"), React.createElement(Input, {\n        type: \"text\",\n        id: \"country\",\n        placeholder: \"Enter Comment\",\n        onChange: this.handleInputs(\"comments\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"submit\",\n        size: \"sm\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this3.postInfo;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \" \", React.createElement(\"i\", {\n        className: \"fa fa-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \" \"), \"Submit\"), React.createElement(Button, {\n        type: \"reset\",\n        size: \"sm\",\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }), \" Reset\")));\n    }\n  }]);\n\n  return GeneralQuo;\n}(Component);\n\nexport default GeneralQuo;","map":{"version":3,"sources":["/goinfre/vsibanyo/Documents/GitHub/Brimis-Front-End/src/views/Pages/Inputs/general-quo.js"],"names":["React","Component","Col","Row","FormGroup","Button","Input","Label","Dropdown","DropdownItem","DropdownMenu","DropdownToggle","axios","Select","GeneralQuo","props","handlePerson","selectedPerson","setState","console","log","handleClient","selectedClient","handleType","selectedType","handleChoice","selectedChoice","toggle","bind","postInfo","handleInputs","state","activeTab","dropdownOpen","Array","fill","clientList","value","label","contactList","client","createdBy","rfq","quoteType","description","dateReceived","deadline","time","isSubmitted","comments","fetchPost","fetchList","fetch","then","res","json","data","map","listItem","catch","err","listArr","listCon","i","length","contact","firstName","clientlist","key","e","target","post","response","error","tab","newArray","element","index"],"mappings":"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","sourcesContent":["import React, {\n    Component\n} from 'react';\nimport {\n    Col,\n    Row,\n    FormGroup,\n    Button,\n    Input,\n    Label, Dropdown, DropdownItem, DropdownMenu, DropdownToggle,\n}\n    from 'reactstrap';\nimport axios from \"axios\";\nimport Select from 'react-select';\n\nclass GeneralQuo extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.postInfo = this.postInfo.bind(this);\n        this.handleInputs = this.handleInputs.bind(this);\n        this.state = {\n            activeTab: '1',\n            dropdownOpen: new Array(6).fill(false),\n            clientList: [{\n                value: \"\",\n                label: \"\",\n            }],\n            contactList: [{\n                value: \"\",\n                label: \"\",\n            }],\n            selectedClient: null,\n            selectedPerson: null,\n            selectedType: null,\n            selectedChoice: null,\n            client: \"\",\n            createdBy: \"\",\n            rfq: \"\",\n            quoteType: \"\",\n            description: \"\",\n            dateReceived: \"\",\n            deadline: \"\",\n            time: \"\",\n            isSubmitted: \"\",\n            comments: \"\",\n        };\n    }\n\n    componentDidMount() {\n        this.fetchPost();\n    }\n\n    fetchPost() {\n        let fetchList = [];\n        fetch('https://brimis-crm-backend.herokuapp.com/crm/clientcontacts/')\n            .then(res => {\n                console.log(\"fetched create task clients\");\n                return res.json();\n            })\n            .then(data => {\n                fetchList = data.map((listItem) => {\n                    return listItem\n                })\n            })\n            .catch(err => {\n                console.log(err);\n            })\n            .then(() => {\n                let listArr = [{ value: \"\", label: \"\" },];\n                let listCon = [{ value: \"\", label: \"\" },];\n\n                for (var i = 0; i < fetchList.length; i++) {\n                    listArr[i] = { value: fetchList[i].client[\"name\"], label: fetchList[i].client[\"name\"] };\n                    listCon[i] = { value: fetchList[i].contact.firstName, label: fetchList[i].contact.firstName, }\n                    console.log(listArr[i][\"value\"]);\n                }\n                this.setState({\n                    clientlist: [...listArr],\n                    contactList: [...listCon],\n\n                });\n            });\n    }\n\n    handlePerson = (selectedPerson) => {\n        this.setState({ selectedPerson });\n        console.log(`Option selected:`, selectedPerson);\n    }\n\n    handleClient = (selectedClient) => {\n        this.setState({ selectedClient });\n        console.log(`Option selected:`, selectedClient);\n    }\n\n    handleType = (selectedType) => {\n        this.setState({ selectedType });\n        console.log(`Option selected:`, selectedType);\n    }\n\n    handleChoice = (selectedChoice) => {\n        this.setState({ selectedChoice });\n        console.log(`Option selected:`, selectedChoice);\n    }\n\n    handleInputs(key) {\n        return function (e) {\n            var state = {};\n            state[key] = e.target.value;\n            this.setState(state);\n        }.bind(this);\n    }\n    \n    postInfo() {\n        axios.post('https://brimis-crm-backend.herokuapp.com/crm/quotes/create/', {\n            client: \"\",\n            createdBy: \"\",\n            rfq: \"\",\n            quoteType: \"\",\n            description: \"\",\n            dateReceived: \"\",\n            deadline: \"\",\n            time: \"\",\n            isSubmitted: \"\",\n            comments: \"\",\n        })\n        .then(function (response) {\n            console.log(response);\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab,\n            });\n        }\n    }\n\n    toggleDrop(tab) {\n        const newArray = this.state.dropdownOpen.map((element, index) => {\n            return (index === tab ? !element : false);\n        });\n        this.setState({\n            dropdownOpen: newArray,\n        });\n    }\n    render() {\n        const { selectedPerson, selectedClient, selectedType, selectedChoice } = this.state;\n        return (\n            <Row>\n                <Col>\n                    <Row>\n                        <Col sm=\"3\">\n                            <Label htmlFor=\"street\" > Client </Label>\n                            <Select\n                                value={selectedClient}\n                                onChange={this.handleClient}\n                                options={this.state.clientlist}\n                            />\n                        </Col>\n                        <Col sm=\"3\">\n                            <Label htmlFor=\"street\" > Contact Person </Label>\n                                <Select\n                                    value={selectedPerson}\n                                    onChange={this.handlePerson}\n                                    options={this.state.contactList}\n                                />\n                            </Col>\n                        <Col sm=\"3\">\n                            <Label htmlFor=\"street\" > Quote Type </Label>\n                            <Select\n                                value={selectedType}\n                                onChange={this.handleType}\n                                options={[\n                                    { value: 'product', label: 'Product' },\n                                    { value: 'service', label: 'Service' },\n                                    { value: 'other', label: 'Other' },\n                                ]}\n                            />\n                        </Col>\n                    </Row>\n                    <FormGroup >\n                        <Label htmlFor=\"country\" > Description </Label>\n                        <Input type=\"text\" id=\"country\" placeholder=\"Enter Description\" onChange={this.handleInputs(\"description\")}/>\n                    </FormGroup>\n                    <Row>\n                        <Col sm=\"3\">\n                            <FormGroup>\n                                <Label for=\"deadline\"> DeadLine </Label>\n                                <Input type=\"date\" name=\"deadline\" id=\"deadLine\" placeholder=\"DD/MM/YY\" onChange={this.handleInputs(\"deadline\")}/>\n                            </FormGroup>\n                        </Col>\n                        <Col sm=\"3\">\n                            <FormGroup>\n                                <Label for=\"time\">Time </Label>\n                                <Input type=\"time\" name=\"time\" id=\"time\" placeholder=\"00h00\" onChange={this.handleInputs(\"time\")}/>\n                            </FormGroup>\n                        </Col>\n                        <Col sm=\"3\">\n                            <Label htmlFor=\"street\" > Submitted </Label>\n                            <Select\n                                value={selectedChoice}\n                                onChange={this.handleChoice}\n                                options={[\n                                    { value: 'yes', label: 'Yes' },\n                                    { value: 'no', label: 'No' },\n                                ]}\n                            />\n                        </Col>\n                    </Row>\n                    <FormGroup >\n                        <Label htmlFor=\"country\" > Comments </Label>\n                        <Input type=\"text\" id=\"country\" placeholder=\"Enter Comment\" onChange={this.handleInputs(\"comments\")}/>\n                    </FormGroup>\n                    <Button type=\"submit\" size=\"sm\" color=\"primary\" onClick={() => this.postInfo}  > < i className=\"fa fa-user\" > </i>Submit</Button >\n                    <Button type=\"reset\" size=\"sm\" color=\"danger\"><i className=\"fa fa-ban\"></i> Reset</Button>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default GeneralQuo;"]},"metadata":{},"sourceType":"module"}