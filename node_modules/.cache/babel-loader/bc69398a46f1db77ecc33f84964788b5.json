{"ast":null,"code":"import _classCallCheck from \"/Users/sazi/Desktop/BrimisFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sazi/Desktop/BrimisFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sazi/Desktop/BrimisFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sazi/Desktop/BrimisFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sazi/Desktop/BrimisFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/sazi/Desktop/BrimisFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/sazi/Desktop/BrimisFrontEnd/src/views/Pages/Inputs/task_input.js\";\nimport React, { Component } from 'react';\nimport { Col, Row, FormGroup, Button, Input, Label, Dropdown, DropdownItem, DropdownMenu, DropdownToggle } from 'reactstrap'; // import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\n\nimport axios from 'axios';\nimport Select from 'react-select';\nvar options = [{\n  value: 'call',\n  label: 'Call'\n}, {\n  value: 'email',\n  label: 'Email'\n}, {\n  value: 'follow-up',\n  label: 'Follow Up'\n}];\n\nvar TaskInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TaskInput, _Component);\n\n  function TaskInput(props) {\n    var _this;\n\n    _classCallCheck(this, TaskInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TaskInput).call(this, props));\n\n    _this.handleCategory = function (selectedCategory) {\n      _this.setState({\n        selectedCategory: selectedCategory\n      });\n\n      console.log(\"Category selected:\", selectedCategory);\n    };\n\n    _this.handleClient = function (selectedClient) {\n      _this.setState({\n        selectedClient: selectedClient\n      });\n\n      console.log(\"Client selected:\", selectedClient);\n    };\n\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInputs = _this.handleInputs.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      activeTab: '1',\n      dropdownOpen: new Array(6).fill(false),\n      list: [{\n        value: \"\",\n        label: \"\"\n      }],\n      task: '',\n      client: '',\n      dateDue: '',\n      time: '',\n      isCompleted: '',\n      selectedCategory: null,\n      selectedClient: null,\n      startDate: new Date()\n    };\n    return _this;\n  }\n\n  _createClass(TaskInput, [{\n    key: \"handleChange\",\n    value: function handleChange(date) {\n      this.setState({\n        startDate: date\n      });\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(tab) {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"toggleDrop\",\n    value: function toggleDrop(tab) {\n      var newArray = this.state.dropdownOpen.map(function (element, index) {\n        return index === tab ? !element : false;\n      });\n      this.setState({\n        dropdownOpen: newArray\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchPost();\n    }\n  }, {\n    key: \"fetchPost\",\n    value: function fetchPost() {\n      var _this2 = this;\n\n      var fetchList = [];\n      fetch('https://brimis-crm-backend.herokuapp.com/crm/clients/').then(function (res) {\n        console.log(\"fetched create task clients\");\n        return res.json();\n      }).then(function (data) {\n        fetchList = data.map(function (listItem) {\n          return listItem;\n        });\n      }).catch(function (err) {\n        console.log(err);\n      }).then(function () {\n        var listArr = [{\n          value: \"\",\n          label: \"\"\n        }];\n\n        for (var i = 0; i < fetchList.length; i++) {\n          listArr[i] = {\n            value: fetchList[i].id,\n            label: fetchList[i].name\n          };\n          console.log(listArr[i].value, listArr[i].label);\n        }\n\n        _this2.setState({\n          list: listArr.concat()\n        });\n      });\n    }\n  }, {\n    key: \"handleInputs\",\n    value: function handleInputs(key) {\n      return function (e) {\n        var state = {};\n        state[key] = e.target.value;\n        console.log(e.target.value);\n        this.setState(state);\n      }.bind(this);\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {\n      axios.post('https://brimis-crm-backend.herokuapp.com/crm/usertasks/create/', {\n        assignedTo: \"1\",\n        task: this.state.task,\n        client: this.state.client,\n        dateDue: this.state.dateDue,\n        time: this.state.time,\n        isCompleted: 'False'\n      }).then(function (response) {\n        console.log(response);\n        console.log(\"Pushed new task\");\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          selectedCategory = _this$state.selectedCategory,\n          selectedClient = _this$state.selectedClient;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"task\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \" New Task \"), React.createElement(Input, {\n        type: \"text\",\n        id: \"task\",\n        placeholder: \"Enter task details\",\n        onChange: this.handleInputs(\"task\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        sm: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"client\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \" Client \"), React.createElement(Select, {\n        value: selectedClient,\n        onChange: this.handleClient,\n        options: this.state.list,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"due\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \" Due: \")), React.createElement(Col, {\n        sm: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Date\"), React.createElement(Input, {\n        type: \"date\",\n        name: \"date\",\n        id: \"exampleDate\",\n        placeholder: \"date placeholder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \" Category: \"), React.createElement(Select, {\n        value: selectedCategory,\n        onChange: this.handleCategory,\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        size: \"sm\",\n        color: \"primary\",\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \" \", React.createElement(\"i\", {\n        className: \"fa fa-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \" \"), \"Create\"), React.createElement(Button, {\n        type: \"reset\",\n        size: \"sm\",\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), \" Reset\"))))));\n    }\n  }]);\n\n  return TaskInput;\n}(Component);\n\nexport default TaskInput;","map":{"version":3,"sources":["/Users/sazi/Desktop/BrimisFrontEnd/src/views/Pages/Inputs/task_input.js"],"names":["React","Component","Col","Row","FormGroup","Button","Input","Label","Dropdown","DropdownItem","DropdownMenu","DropdownToggle","axios","Select","options","value","label","TaskInput","props","handleCategory","selectedCategory","setState","console","log","handleClient","selectedClient","toggle","bind","handleClick","handleInputs","handleChange","state","activeTab","dropdownOpen","Array","fill","list","task","client","dateDue","time","isCompleted","startDate","Date","date","tab","newArray","map","element","index","fetchPost","fetchList","fetch","then","res","json","data","listItem","catch","err","listArr","i","length","id","name","key","e","target","post","assignedTo","response","error"],"mappings":"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","sourcesContent":["import React, {\n    Component\n}\n    from 'react';\nimport {\n    Col,\n    Row,\n    FormGroup,\n    Button,\n    Input,\n    Label,\n    Dropdown, DropdownItem, DropdownMenu, DropdownToggle, \n}\n    from 'reactstrap';\n\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Select from 'react-select';\n\nconst options = [\n    { value: 'call', label: 'Call' },\n    { value: 'email', label: 'Email' },\n    { value: 'follow-up', label: 'Follow Up' }\n];\n\nclass TaskInput extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleInputs = this.handleInputs.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.state = {\n            activeTab: '1',\n            dropdownOpen: new Array(6).fill(false),\n            list: [{\n                value: \"\",\n                label: \"\",\n            }],\n            task: '',\n            client: '',\n            dateDue: '',\n            time: '',\n            isCompleted: '',\n            selectedCategory: null,\n            selectedClient: null,\n            startDate: new Date(),\n        };\n    }\n\n    handleChange(date) {\n        this.setState({\n          startDate: date\n        });\n      }\n      \n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab,\n            });\n        }\n    }\n\n    toggleDrop(tab) {\n        const newArray = this.state.dropdownOpen.map((element, index) => {\n            return (index === tab ? !element : false);\n        });\n        this.setState({\n            dropdownOpen: newArray,\n        });\n    }\n\n    handleCategory = (selectedCategory) => {\n        this.setState({ selectedCategory });\n        console.log(`Category selected:`, selectedCategory);\n    }\n\n    handleClient = (selectedClient) => {\n        this.setState({ selectedClient });\n        console.log(`Client selected:`, selectedClient);\n    }\n\n    componentDidMount() {\n        this.fetchPost();\n    }\n\n    fetchPost() {\n        let fetchList = [];\n        fetch('https://brimis-crm-backend.herokuapp.com/crm/clients/')\n            .then(res => {\n                console.log(\"fetched create task clients\");\n                return res.json();\n            })\n            .then(data => {\n                fetchList = data.map((listItem) => {\n                    return listItem\n                })\n            })\n            .catch(err => {\n                console.log(err);\n            })\n            .then(() => {\n                let listArr = [{value: \"\", label: \"\"},];\n                \n                for (var i = 0; i < fetchList.length; i++)\n                {\n                    listArr[i] = { value: fetchList[i].id, label: fetchList[i].name };\n                    console.log(listArr[i].value, listArr[i].label)\n                }\n                this.setState({\n                    list: [...listArr]\n                });\n                \n            });\n            \n    }\n\n    handleInputs(key) {\n        return function (e) {\n            var state = {};\n            state[key] = e.target.value;\n            console.log(e.target.value);\n            this.setState(state);\n        }.bind(this);\n    }\n\n    handleClick() {\n        \n        axios.post('https://brimis-crm-backend.herokuapp.com/crm/usertasks/create/', {\n            assignedTo: \"1\",\n            task: this.state.task,\n            client: this.state.client,\n            dateDue: this.state.dateDue,\n            time: this.state.time,\n            isCompleted: 'False'\n        })\n            .then(function (response) {\n                console.log(response);\n                console.log(\"Pushed new task\");\n            })\n            .catch(function (error) {\n                console.log(error);\n        });\n    }\n\n    render() {\n        const { selectedCategory, selectedClient } = this.state;\n        return (\n            <div>\n                <Row>\n                    <Col>\n                        <Row>\n                            <Col sm=\"8\">\n                                <FormGroup >\n                                    <Label htmlFor=\"task\" > New Task </Label>\n                                    <Input type=\"text\" id=\"task\" placeholder=\"Enter task details\" onChange={this.handleInputs(\"task\")} />\n                                </FormGroup>\n                            </Col>\n                            <Col sm=\"4\">\n                                <Label htmlFor=\"client\" > Client </Label>\n                                <Select\n                                    value={selectedClient}\n                                    onChange={this.handleClient}\n                                    options={this.state.list}\n                                />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm=\"4\">\n                                <Label htmlFor=\"due\" > Due: </Label>\n                                {/* <DatePicker selected={this.state.startDate} onChange={this.handleChange}/> */}\n                            </Col>\n                            <Col sm=\"4\">\n                                <Label for=\"exampleDate\">Date</Label>\n                                <Input type=\"date\" name=\"date\" id=\"exampleDate\" placeholder=\"date placeholder\" />\n                                {/* <Label htmlFor=\"time\" > Time: </Label>\n                                <Input type=\"text\" id=\"time\" placeholder=\"00h00\" onChange={this.handleInputs(\"time\")} /> */}\n                            </Col>\n                            <Col sm=\"4\">\n                                <Label htmlFor=\"category\" > Category: </Label>\n                                <Select\n                                    value={selectedCategory}\n                                    onChange={this.handleCategory}\n                                    options={options}\n                                />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Button type=\"submit\" size=\"sm\" color=\"primary\" onClick={this.handleClick}> < i className=\"fa fa-user\" > </i>Create</Button >\n                                <Button type=\"reset\" size=\"sm\" color=\"danger\"><i className=\"fa fa-ban\"></i> Reset</Button>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default TaskInput;"]},"metadata":{},"sourceType":"module"}