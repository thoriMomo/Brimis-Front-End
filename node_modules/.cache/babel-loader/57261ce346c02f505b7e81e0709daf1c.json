{"ast":null,"code":"import _classCallCheck from \"/Users/sazi/Desktop/BrimisFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sazi/Desktop/BrimisFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sazi/Desktop/BrimisFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sazi/Desktop/BrimisFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sazi/Desktop/BrimisFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sazi/Desktop/BrimisFrontEnd/src/views/Pages/Leads/leads_list.js\";\nimport React, { Component } from 'react';\nimport { Col, ListGroup, ListGroupItem, Row } from 'reactstrap'; //import { connect } from 'net';\n\nimport { connect } from \"react-redux\";\nimport { getLeadDetails } from \"../../redux/actions/index\";\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getContactDetails: function getContactDetails(leadDetails) {\n      return dispatch(getLeadDetails(leadDetails));\n    }\n  };\n};\n\nvar LeadsList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LeadsList, _Component);\n\n  function LeadsList(props) {\n    var _this;\n\n    _classCallCheck(this, LeadsList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LeadsList).call(this, props));\n    _this.state = {\n      list: [],\n      clientContact: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(LeadsList, [{\n    key: \"update\",\n    value: function update(client, createdBy, clientContact) {\n      console.log(clientContact); // const contactID = 1;\n      // this.props.getLeadDetails({client , createdBy, clientContact});\n\n      getLeadDetails({\n        client: client,\n        createdBy: createdBy,\n        clientContact: clientContact\n      });\n      this.setState({\n        clientContact: clientContact\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchPost();\n    }\n  }, {\n    key: \"fetchPost\",\n    value: function fetchPost() {\n      var _this2 = this;\n\n      var fetchList = [];\n      fetch('https://brimis-crm-backend.herokuapp.com/crm/leads/').then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        fetchList = data.map(function (listItem) {\n          return listItem;\n        });\n      }).then(function () {\n        _this2.setState({\n          list: fetchList\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var view = this.state.list.map(function (item, index) {\n        return React.createElement(ListGroupItem, {\n          key: index,\n          tag: \"a\",\n          href: \"#/leads/details\",\n          onClick: function onClick() {\n            return _this3.update(item.client.name, item.createdBy.username, item.clientContact.firstName);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \" \", item.client.name, \" | \", item.clientContact.firstName, \" \", item.clientContact.lastName, console.log(\"printing out list in render:\" + _this3.state.list), React.createElement(\"div\", {\n          className: \"card-header-actions\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          rel: \"noreferrer noopener\",\n          className: \"card-header-action\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"small\", {\n          className: \"text-muted\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"delete\"))), React.createElement(\"div\", {\n          className: \"card-header-actions\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          rel: \"noreferrer noopener\",\n          className: \"card-header-action\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"small\", {\n          className: \"text-muted\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"edit\"))));\n      });\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, view)));\n    }\n  }]);\n\n  return LeadsList;\n}(Component);\n\nvar List = connect(null, mapDispatchToProps)(LeadsList);\nexport default List;","map":{"version":3,"sources":["/Users/sazi/Desktop/BrimisFrontEnd/src/views/Pages/Leads/leads_list.js"],"names":["React","Component","Col","ListGroup","ListGroupItem","Row","connect","getLeadDetails","mapDispatchToProps","dispatch","getContactDetails","leadDetails","LeadsList","props","state","list","clientContact","client","createdBy","console","log","setState","fetchPost","fetchList","fetch","then","res","json","data","map","listItem","catch","err","view","item","index","update","name","username","firstName","lastName","List"],"mappings":"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","sourcesContent":["import React, {\n    Component\n} from 'react';\nimport { Col, ListGroup, ListGroupItem, Row, } from 'reactstrap';\n//import { connect } from 'net';\nimport { connect } from \"react-redux\";\nimport { getLeadDetails } from \"../../redux/actions/index\"\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getContactDetails: leadDetails => dispatch(getLeadDetails(leadDetails))\n    };\n};\n\nclass LeadsList extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            list: [],\n            clientContact: \"\",\n        }\n    }\n\nupdate(client, createdBy, clientContact) {\n        console.log(clientContact);\n        // const contactID = 1;\n        // this.props.getLeadDetails({client , createdBy, clientContact});\n        getLeadDetails({client , createdBy, clientContact});\n        this.setState({clientContact: clientContact});\n    }\n\n    componentDidMount() {\n        this.fetchPost();\n    }\n\n    fetchPost() {\n        let fetchList = [];\n        fetch('https://brimis-crm-backend.herokuapp.com/crm/leads/')\n        .then(res => {\n            return res.json();\n        })\n        .then(data => {\n            fetchList = data.map((listItem) => {\n                return listItem;\n            })\n        })\n        .then(() => {\n            this.setState({\n                list: fetchList,\n            });\n        })\n        .catch(err => {\n            console.log(err);\n        });\n    }\n\n    render() {\n        const view = this.state.list.map((item, index) =>\n            <ListGroupItem key={index} tag=\"a\" href=\"#/leads/details\" onClick={() => this.update(item.client.name, item.createdBy.username, item.clientContact.firstName)}> {item.client.name} | {item.clientContact.firstName} {item.clientContact.lastName}\n            {console.log(\"printing out list in render:\" + this.state.list)}\n                <div className=\"card-header-actions\">\n                    <a href=\"#\" rel=\"noreferrer noopener\" className=\"card-header-action\">\n                        <small className=\"text-muted\">delete</small>\n                    </a>\n                </div>\n                <div className=\"card-header-actions\">\n                    <a href=\"#\" rel=\"noreferrer noopener\" className=\"card-header-action\">\n                        <small className=\"text-muted\">edit</small>\n                    </a>\n                </div>\n            </ListGroupItem>\n        )\n        return (\n            <Row>\n                <Col>\n                    <ListGroup>\n                        {view}\n                    </ListGroup>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nconst List = connect(null, mapDispatchToProps)(LeadsList)\n\nexport default List;"]},"metadata":{},"sourceType":"module"}