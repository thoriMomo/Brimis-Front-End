{"ast":null,"code":"import _classCallCheck from \"/Users/sazi/Desktop/BrimisFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sazi/Desktop/BrimisFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sazi/Desktop/BrimisFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sazi/Desktop/BrimisFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sazi/Desktop/BrimisFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/sazi/Desktop/BrimisFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/sazi/Desktop/BrimisFrontEnd/src/views/Pages/Inputs/tender_quo.js\";\nimport React, { Component } from 'react';\nimport { Col, Row, FormGroup, Button, Input, Label, Dropdown, DropdownItem, DropdownMenu, DropdownToggle } from 'reactstrap';\nimport axios from \"axios\";\nimport Select from 'react-select';\nvar options = [{\n  value: 'true',\n  label: 'Yes'\n}, {\n  value: 'false',\n  label: 'No'\n}];\n\nvar TenderQuo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TenderQuo, _Component);\n\n  function TenderQuo(props) {\n    var _this;\n\n    _classCallCheck(this, TenderQuo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TenderQuo).call(this, props));\n\n    _this.handleClient = function (selectedClient) {\n      _this.setState({\n        selectedClient: selectedClient\n      });\n\n      console.log(\"Client selected:\", selectedClient);\n    };\n\n    _this.handleChange = function (selectedOption) {\n      _this.setState({\n        selectedOption: selectedOption\n      });\n\n      console.log(\"Option selected:\", selectedOption);\n    };\n\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.postInfo = _this.postInfo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInputs = _this.handleInputs.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      activeTab: '1',\n      dropdownOpen: new Array(6).fill(false),\n      selectedClient: null,\n      clientList: [{\n        value: \"\",\n        label: \"\"\n      }],\n      client: \"\",\n      tenderID: \"\",\n      description: \"\",\n      ResponsiblePerson: \"\",\n      deadline: \"\",\n      time: \"\",\n      enquiryDate: \"\",\n      clarificationDate: \"\",\n      buyerEnduser: \"\",\n      trn: \"\",\n      tenderValue: \"\",\n      status: \"\",\n      isDelivered: \"\",\n      probability: \"\",\n      technicalFunctionality: \"\",\n      expectedOrderPlacement: \"\",\n      comments: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(TenderQuo, [{\n    key: \"toggle\",\n    value: function toggle(tab) {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"toggleDrop\",\n    value: function toggleDrop(tab) {\n      var newArray = this.state.dropdownOpen.map(function (element, index) {\n        return index === tab ? !element : false;\n      });\n      this.setState({\n        dropdownOpen: newArray\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchPost();\n    }\n  }, {\n    key: \"fetchPost\",\n    value: function fetchPost() {\n      var _this2 = this;\n\n      var fetchList = [];\n      fetch('https://brimis-crm-backend.herokuapp.com/crm/clients/').then(function (res) {\n        console.log(\"fetched create task clients\");\n        return res.json();\n      }).then(function (data) {\n        fetchList = data.map(function (listItem) {\n          return listItem;\n        });\n      }).catch(function (err) {\n        console.log(err);\n      }).then(function () {\n        var listArr = [{\n          value: \"\",\n          label: \"\"\n        }];\n\n        for (var i = 0; i < fetchList.length; i++) {\n          listArr[i] = {\n            value: fetchList[i].id,\n            label: fetchList[i].name\n          };\n          console.log(listArr[i].value, listArr[i].label);\n        }\n\n        _this2.setState({\n          clientList: listArr.concat()\n        });\n      });\n    }\n  }, {\n    key: \"handleInputs\",\n    value: function handleInputs(key) {\n      return function (e) {\n        var state = {};\n        state[key] = e.target.value;\n        this.setState(state);\n      }.bind(this);\n    }\n  }, {\n    key: \"postInfo\",\n    value: function postInfo() {\n      axios.post('https://brimis-crm-backend.herokuapp.com/crm/tenders/create/', {\n        client: \"\",\n        tenderID: \"\",\n        description: \"\",\n        ResponsiblePerson: \"\",\n        deadline: \"\",\n        time: \"\",\n        enquiryDate: \"\",\n        clarificationDate: \"\",\n        buyerEnduser: \"\",\n        trn: \"\",\n        tenderValue: \"\",\n        status: \"\",\n        isDelivered: \"\",\n        probability: \"\",\n        technicalFunctionality: \"\",\n        expectedOrderPlacement: \"\",\n        comments: \"\"\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          selectedOption = _this$state.selectedOption,\n          selectedClient = _this$state.selectedClient;\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"client\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \" Client \"), React.createElement(Select, {\n        value: selectedClient,\n        onChange: this.handleClient,\n        options: this.state.clientList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"client_entry\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \" Enter New Client \"), React.createElement(Input, {\n        type: \"text\",\n        id: \"client\",\n        placeholder: \"Enter client\",\n        onChange: this.handleInputs(\"client\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \" Description \"), React.createElement(Input, {\n        type: \"text\",\n        id: \"description\",\n        placeholder: \"Enter Description\",\n        onChange: this.handleInputs(\"description\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"resp_person\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Responsible Person \"), React.createElement(Input, {\n        type: \"text\",\n        id: \"resp_person\",\n        placeholder: \"Who is responsible?\",\n        onChange: this.handleInputs(\"ResponsiblePerson\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"deadline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \" Deadline \"), React.createElement(Input, {\n        type: \"text\",\n        id: \"deadline\",\n        placeholder: \"DD/MM/YYYY\",\n        onChange: this.handleInputs(\"deadline\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \" Time \"), React.createElement(Input, {\n        type: \"time\",\n        id: \"time\",\n        placeholder: \"00h00\",\n        onChange: this.handleInputs(\"time\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"enq_date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \" Enquiry Date \"), React.createElement(Input, {\n        type: \"date\",\n        id: \"enq_date\",\n        placeholder: \"DD/MM/YYYY\",\n        onChange: this.handleInputs(\"enquiryDate\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"clarification\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Clarification Date \"), React.createElement(Input, {\n        type: \"date\",\n        id: \"clarification\",\n        placeholder: \"DD/MM/YYYY\",\n        onChange: this.handleInputs(\"clarificationDate\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"trn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \" Tender Ref. Number \"), React.createElement(Input, {\n        type: \"text\",\n        id: \"trn\",\n        placeholder: \"RFQ\",\n        onChange: this.handleInputs(\"trn\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"trn_val\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \" Estimated Tender Value \"), React.createElement(Input, {\n        type: \"text\",\n        id: \"trn_val\",\n        placeholder: \"R0.00\",\n        onChange: this.handleInputs(\"tenderValue\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \" Status \"), React.createElement(Input, {\n        type: \"text\",\n        id: \"status\",\n        placeholder: \"Status\",\n        onChange: this.handleInputs(\"status\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"submitted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Submitted \"), React.createElement(Select, {\n        value: selectedOption,\n        onChange: this.handleChange,\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"prob\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \" Probability \"), React.createElement(Input, {\n        type: \"text\",\n        id: \"prob\",\n        placeholder: \"0%\",\n        onChange: this.handleInputs(\"probability\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"tech_func\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \" Technical Functionality \"), React.createElement(Input, {\n        type: \"text\",\n        id: \"tech_func\",\n        placeholder: \"Functional Description\",\n        onChange: this.handleInputs(\"technicalFunctionality\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"ex_or_pl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \" Expected Order Placement \"), React.createElement(Input, {\n        type: \"text\",\n        id: \"ex_or_pl\",\n        placeholder: \"With Whom?\",\n        onChange: this.handleInputs(\"expectedOrderPlacement\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      })))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \" Comments \"), React.createElement(Input, {\n        type: \"text\",\n        id: \"comment\",\n        placeholder: \"Enter Comment\",\n        onChange: this.handleInputs(\"comments\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"submit\",\n        size: \"sm\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this3.postInfo;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \" \", React.createElement(\"i\", {\n        className: \"fa fa-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \" \"), \"Submit\"), React.createElement(Button, {\n        type: \"reset\",\n        size: \"sm\",\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }), \" Reset\")));\n    }\n  }]);\n\n  return TenderQuo;\n}(Component);\n\nexport default TenderQuo;","map":{"version":3,"sources":["/Users/sazi/Desktop/BrimisFrontEnd/src/views/Pages/Inputs/tender_quo.js"],"names":["React","Component","Col","Row","FormGroup","Button","Input","Label","Dropdown","DropdownItem","DropdownMenu","DropdownToggle","axios","Select","options","value","label","TenderQuo","props","handleClient","selectedClient","setState","console","log","handleChange","selectedOption","toggle","bind","postInfo","handleInputs","state","activeTab","dropdownOpen","Array","fill","clientList","client","tenderID","description","ResponsiblePerson","deadline","time","enquiryDate","clarificationDate","buyerEnduser","trn","tenderValue","status","isDelivered","probability","technicalFunctionality","expectedOrderPlacement","comments","tab","newArray","map","element","index","fetchPost","fetchList","fetch","then","res","json","data","listItem","catch","err","listArr","i","length","id","name","key","e","target","post","response","error"],"mappings":"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","sourcesContent":["import React, {\n    Component\n} from 'react';\nimport {\n    Col,\n    Row,\n    FormGroup,\n    Button,\n    Input,\n    Label,\n    Dropdown, DropdownItem, DropdownMenu, DropdownToggle,\n}\n    from 'reactstrap';\nimport axios from \"axios\";\nimport Select from 'react-select';\n\nconst options = [\n    { value: 'true', label: 'Yes' },\n    { value: 'false', label: 'No' },\n];\n\nclass TenderQuo extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.postInfo = this.postInfo.bind(this);\n        this.handleInputs = this.handleInputs.bind(this);\n        \n        this.state = {\n            activeTab: '1',\n            dropdownOpen: new Array(6).fill(false),\n            selectedClient: null,\n            clientList: [{\n                value: \"\",\n                label: \"\",\n            }],\n            client: \"\",\n            tenderID: \"\",\n            description: \"\",\n            ResponsiblePerson: \"\",\n            deadline: \"\",\n            time: \"\",\n            enquiryDate: \"\",\n            clarificationDate: \"\",\n            buyerEnduser: \"\",\n            trn: \"\",\n            tenderValue: \"\",\n            status: \"\",\n            isDelivered: \"\",\n            probability: \"\",\n            technicalFunctionality: \"\",\n            expectedOrderPlacement: \"\",\n            comments: \"\",\n        };\n    }\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab,\n            });\n        }\n    }\n\n    toggleDrop(tab) {\n        const newArray = this.state.dropdownOpen.map((element, index) => {\n            return (index === tab ? !element : false);\n        });\n        this.setState({\n            dropdownOpen: newArray,\n        });\n    }\n\n    componentDidMount() {\n        this.fetchPost();\n    }\n\n    fetchPost() {\n        let fetchList = [];\n        fetch('https://brimis-crm-backend.herokuapp.com/crm/clients/')\n            .then(res => {\n                console.log(\"fetched create task clients\");\n                return res.json();\n            })\n            .then(data => {\n                fetchList = data.map((listItem) => {\n                    return listItem\n                })\n            })\n            .catch(err => {\n                console.log(err);\n            })\n            .then(() => {\n                let listArr = [{ value: \"\", label: \"\" },];\n\n                for (var i = 0; i < fetchList.length; i++) {\n                    listArr[i] = { value: fetchList[i].id, label: fetchList[i].name };\n                    console.log(listArr[i].value, listArr[i].label)\n                }\n                this.setState({\n                    clientList: [...listArr]\n                });\n\n            });\n\n    }\n\n    handleClient = (selectedClient) => {\n        this.setState({ selectedClient });\n        console.log(`Client selected:`, selectedClient);\n    }\n\n    handleChange = (selectedOption) => {\n        this.setState({ selectedOption });\n        console.log(`Option selected:`, selectedOption);\n    }\n\n    handleInputs(key) {\n        return function (e) {\n            var state = {};\n            state[key] = e.target.value;\n            this.setState(state);\n        }.bind(this);\n    }\n\n    postInfo() {\n        axios.post('https://brimis-crm-backend.herokuapp.com/crm/tenders/create/', {\n            client: \"\",\n            tenderID: \"\",\n            description: \"\",\n            ResponsiblePerson: \"\",\n            deadline: \"\",\n            time: \"\",\n            enquiryDate: \"\",\n            clarificationDate: \"\",\n            buyerEnduser: \"\",\n            trn: \"\",\n            tenderValue: \"\",\n            status: \"\",\n            isDelivered: \"\",\n            probability: \"\",\n            technicalFunctionality: \"\",\n            expectedOrderPlacement: \"\",\n            comments: \"\",\n        })\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    render() {\n        const { selectedOption, selectedClient } = this.state;\n        return (\n            <Row>\n                <Col>\n                    <Row>\n                        <Col sm=\"3\">\n                            <Label htmlFor=\"client\" > Client </Label>\n                            <Select\n                                value={selectedClient}\n                                onChange={this.handleClient}\n                                options={this.state.clientList}\n                            />\n                        </Col>\n                        <Col sm=\"9\">\n                            <Label htmlFor=\"client_entry\" > Enter New Client </Label>\n                            <Input type=\"text\" id=\"client\" placeholder=\"Enter client\" onChange={this.handleInputs(\"client\")} />\n                        </Col>\n                    </Row>\n                    <FormGroup >\n                        <Label htmlFor=\"description\" > Description </Label>\n                        <Input type=\"text\" id=\"description\" placeholder=\"Enter Description\" onChange={this.handleInputs(\"description\")} />\n                    </FormGroup>\n                    <Row>\n                        <Col sm=\"3\">\n                            <FormGroup>\n                                <Label htmlFor=\"resp_person\" >Responsible Person </Label>\n                                <Input type=\"text\" id=\"resp_person\" placeholder=\"Who is responsible?\" onChange={this.handleInputs(\"ResponsiblePerson\")} />\n                            </FormGroup>\n                        </Col>\n                        <Col sm=\"3\">\n                            <FormGroup>\n                                <Label htmlFor=\"deadline\" > Deadline </Label>\n                                <Input type=\"text\" id=\"deadline\" placeholder=\"DD/MM/YYYY\" onChange={this.handleInputs(\"deadline\")} />\n                            </FormGroup>\n                        </Col>\n                        <Col sm=\"3\">\n                            <FormGroup>\n                                <Label htmlFor=\"time\" > Time </Label>\n                                <Input type=\"time\" id=\"time\" placeholder=\"00h00\" onChange={this.handleInputs(\"time\")} />\n                            </FormGroup>\n                        </Col>\n                        <Col sm=\"3\">\n                            <FormGroup>\n                                <Label htmlFor=\"enq_date\" > Enquiry Date </Label>\n                                <Input type=\"date\" id=\"enq_date\" placeholder=\"DD/MM/YYYY\" onChange={this.handleInputs(\"enquiryDate\")} />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"3\">\n                            <FormGroup>\n                                <Label htmlFor=\"clarification\" >Clarification Date </Label>\n                                <Input type=\"date\" id=\"clarification\" placeholder=\"DD/MM/YYYY\" onChange={this.handleInputs(\"clarificationDate\")} />\n                            </FormGroup>\n                        </Col>\n                        <Col sm=\"3\">\n                            <FormGroup>\n                                <Label htmlFor=\"trn\" > Tender Ref. Number </Label>\n                                <Input type=\"text\" id=\"trn\" placeholder=\"RFQ\" onChange={this.handleInputs(\"trn\")} />\n                            </FormGroup>\n                        </Col>\n                        <Col sm=\"3\">\n                            <FormGroup>\n                                <Label htmlFor=\"trn_val\" > Estimated Tender Value </Label>\n                                <Input type=\"text\" id=\"trn_val\" placeholder=\"R0.00\" onChange={this.handleInputs(\"tenderValue\")} />\n                            </FormGroup>\n                        </Col>\n                        <Col sm=\"3\">\n                            <FormGroup>\n                                <Label htmlFor=\"status\" > Status </Label>\n                                <Input type=\"text\" id=\"status\" placeholder=\"Status\" onChange={this.handleInputs(\"status\")} />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"3\">\n                            <Label htmlFor=\"submitted\" >Submitted </Label>\n                            <Select\n                                value={selectedOption}\n                                onChange={this.handleChange}\n                                options={options}\n                            />\n                        </Col>\n                        <Col sm=\"3\">\n                            <FormGroup>\n                                <Label htmlFor=\"prob\" > Probability </Label>\n                                <Input type=\"text\" id=\"prob\" placeholder=\"0%\" onChange={this.handleInputs(\"probability\")} />\n                            </FormGroup>\n                        </Col>\n                        <Col sm=\"3\">\n                            <FormGroup>\n                                <Label htmlFor=\"tech_func\" > Technical Functionality </Label>\n                                <Input type=\"text\" id=\"tech_func\" placeholder=\"Functional Description\" onChange={this.handleInputs(\"technicalFunctionality\")} />\n                            </FormGroup>\n                        </Col>\n                        <Col sm=\"3\">\n                            <FormGroup>\n                                <Label htmlFor=\"ex_or_pl\" > Expected Order Placement </Label>\n                                <Input type=\"text\" id=\"ex_or_pl\" placeholder=\"With Whom?\" onChange={this.handleInputs(\"expectedOrderPlacement\")} />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <FormGroup >\n                        <Label htmlFor=\"comment\" > Comments </Label>\n                        <Input type=\"text\" id=\"comment\" placeholder=\"Enter Comment\" onChange={this.handleInputs(\"comments\")} />\n                    </FormGroup>\n                    <Button type=\"submit\" size=\"sm\" color=\"primary\" onClick={() => this.postInfo} > < i className=\"fa fa-user\" > </i>Submit</Button >\n                    <Button type=\"reset\" size=\"sm\" color=\"danger\"><i className=\"fa fa-ban\"></i> Reset</Button>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default TenderQuo;"]},"metadata":{},"sourceType":"module"}